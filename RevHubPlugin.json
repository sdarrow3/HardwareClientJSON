{
  "latestSoftware": [
    {
      "expectedFileSizeMiB": 33.7,
      "permanentSoftwareName": "driver-station-app",
      "releaseDate": "2021-02-22T22:56:27.773Z",
      "releaseNotes": "## Version 6.2 (20210218-074821)\n\n### Enhancements\n* Attempts to automatically fix the condition where a Control Hub's internal Expansion Hub is not\n  working by re-flashing its firmware\n* Makes various improvements to the WiFi Direct pairing screen, especially in landscape mode\n* Makes the Robot Controller service no longer be categorically restarted when the main activity is brought to foreground\n    * (e.g. the service is no longer restarted simply by viewing the Self Inspect screen and pressing the back button)\n    * It is still restarted if the Settings menu or Configure Robot menu is opened\n\n\n### Bug fixes\n* Fixes [FtcRobotController issue #71](https://github.com/FIRST-Tech-Challenge/FtcRobotController/issues/71)\n  Cannot open OpModes in v6.1 Blocks offline editor\n* Fixes [FtcRobotController issue #79](https://github.com/FIRST-Tech-Challenge/FtcRobotController/issues/79)\n  6.1 causes a soft reboot on the Motorola E5 Play\n* Fixes issue where the Control Hub OS's watchdog would restart the Robot Controller app if \n  the Control Hub was not able to communicate with its internal Expansion Hub\n* Fixes certain I2C devices not showing up in the appropriate `HardwareMap` fields (such as `hardwareMap.colorSensor`) \n* Fixes issue where performing a WiFi factory reset on the Control Hub would not set the WiFi band to 2.4 GHz\n* Fixes issue where OnBotJava might fail to create a new file if the option to \"Setup Code for Configured Hardware\" was selected\n* Fixes issue where performing certain operations after an Op Mode crashes would temporarily break Control/Expansion Hub communication\n* Fixes issue where a Control Hub with a configured USB-connected Expansion Hub would not work if the Expansion Hub was missing at startup\n* Fixes potential issues caused by having mismatched Control/Expansion Hub firmware versions \n* Fixes [ftc_app issue 673](https://github.com/ftctechnh/ftc_app/issues/673) Latest matchlog is being deleted instead of old ones by RobotLog\n* Fixes ConceptVuforiaUltimateGoalNavigationWebcam sample opmode by correctly orienting camera on robot.\n* Fixes issue where logcat would be spammed with InterruptedExceptions when stop is requested from the Driver Station (this behavior was accidentally introduced in v5.3). This change has no impact on functionality.\n* Fixes issue where the blocks editor fails to load if the name of any TeleOp opmode contains an apostrophe.",
      "sha256": "50FC1C5087102F2F7F890F123E85FDF79EDE401F206D9BBB214105A7FAD2F967",
      "url": "https://github.com/FIRST-Tech-Challenge/FtcRobotController/releases/download/v6.2/FtcDriverStation-release.apk",
      "versionCode": 40,
      "versionString": "6.2"
    }, {
      "expectedFileSizeMiB": 365,
      "permanentSoftwareName": "control-hub-os",
      "releaseDate": "2020-12-16T22:56:27.773Z",
      "releaseNotes": "## Version 1.1.2\n\n* Adds support for Auto Channel Selection, where the Control Hub will pick the least busy WiFi channel on the selected WiFi band when it starts up\n* Migrates all users to Auto Channel Selection on the 5 GHz band by default.\n    * If you find that you are unable to connect to the Control Hub after updating, you should perform a WiFi Factory Reset by holding down the Control Hub's button as it boots, until you see a colorful light sequence. That will reset the WiFi settings and switch to the 2.4 GHz WiFi band.\n* Allows switching the WiFi band between 2.4 GHz and 5 GHz by holding down the Control Hub's button when the hub has been booted for at least 20 seconds\n    * If version 5.5 or later of the Robot Controller app is installed, the Control Hub's light will blink magenta when the band is switched to 5 GHz, or yellow when the band is switched to 2.4 GHz.\n* Continuously monitors the WiFi access point status, and will attempt to restart it if it goes down for any reason\n* Continuously monitors the Robot Controller app, and restarts it if it crashes or hangs (requires version 6.1 or later of the Robot Controller app)\n* Allows the Robot Controller app to access the current WiFi band and channel\n* Always backs up the FTC Robot Controller app data before it is uninstalled, in order to preserve WiFi settings\n* Improves WiFi reliability\n* Prevents issue that could cause device to boot into recovery mode\n* Enables use of mouse button in recovery mode",
      "sha256": "845018EA2B792D06ADE0B5796527FE412217C56924D9E3DCBBF36637CEE051C9",
      "url": "https://www.revrobotics.com/content/sw/rev-hw-client/files/controlhub/ControlHubOS-1.1.2.zip",
      "versionCode": 6,
      "versionString": "1.1.2"
    }, {
      "expectedFileSizeMiB": 0.0068,
      "permanentSoftwareName": "hub-firmware",
      "releaseDate": "2018-07-15T9:25:43.511Z",
      "releaseNotes": "## Version 1.8.2\n* Improved USB recovery in case of fault event (e.g. ESD fault)\n* Improved DC motor output linearity\n* Improved closed-loop control modes\n* Improved I2C speeds\n* Minor bug fixes",
      "sha256": "3CB83605B2F426C00CC7263341D8039B56294DCD35092EA5A35782D49645AC39",
      "url": "https://www.revrobotics.com/content/sw/REVHubFirmware_1_08_02.bin",
      "versionCode": 4,
      "versionString": "1.8.2"
    }, {
      "expectedFileSizeMiB": 38.9,
      "permanentSoftwareName": "robot-controller-app",
      "releaseDate": "2021-02-22T22:56:27.773Z",
      "releaseNotes": "## Version 6.2 (20210218-074821)\n\n### Enhancements\n* Attempts to automatically fix the condition where a Control Hub's internal Expansion Hub is not\n  working by re-flashing its firmware\n* Makes various improvements to the WiFi Direct pairing screen, especially in landscape mode\n* Makes the Robot Controller service no longer be categorically restarted when the main activity is brought to foreground\n    * (e.g. the service is no longer restarted simply by viewing the Self Inspect screen and pressing the back button)\n    * It is still restarted if the Settings menu or Configure Robot menu is opened\n\n\n### Bug fixes\n* Fixes [FtcRobotController issue #71](https://github.com/FIRST-Tech-Challenge/FtcRobotController/issues/71)\n  Cannot open OpModes in v6.1 Blocks offline editor\n* Fixes [FtcRobotController issue #79](https://github.com/FIRST-Tech-Challenge/FtcRobotController/issues/79)\n  6.1 causes a soft reboot on the Motorola E5 Play\n* Fixes issue where the Control Hub OS's watchdog would restart the Robot Controller app if \n  the Control Hub was not able to communicate with its internal Expansion Hub\n* Fixes certain I2C devices not showing up in the appropriate `HardwareMap` fields (such as `hardwareMap.colorSensor`) \n* Fixes issue where performing a WiFi factory reset on the Control Hub would not set the WiFi band to 2.4 GHz\n* Fixes issue where OnBotJava might fail to create a new file if the option to \"Setup Code for Configured Hardware\" was selected\n* Fixes issue where performing certain operations after an Op Mode crashes would temporarily break Control/Expansion Hub communication\n* Fixes issue where a Control Hub with a configured USB-connected Expansion Hub would not work if the Expansion Hub was missing at startup\n* Fixes potential issues caused by having mismatched Control/Expansion Hub firmware versions \n* Fixes [ftc_app issue 673](https://github.com/ftctechnh/ftc_app/issues/673) Latest matchlog is being deleted instead of old ones by RobotLog\n* Fixes ConceptVuforiaUltimateGoalNavigationWebcam sample opmode by correctly orienting camera on robot.\n* Fixes issue where logcat would be spammed with InterruptedExceptions when stop is requested from the Driver Station (this behavior was accidentally introduced in v5.3). This change has no impact on functionality.\n* Fixes issue where the blocks editor fails to load if the name of any TeleOp opmode contains an apostrophe.",
      "sha256": "454539BF073C3EE848F1765CB5FD8D2CA6C2F24244CDAE4C90BE380C80D75B0B",
      "url": "https://github.com/FIRST-Tech-Challenge/FtcRobotController/releases/download/v6.2/FtcRobotController-release.apk",
      "versionCode": 40,
      "versionString": "6.2"
    }
  ],
  "oldVersions": [
    {
      "expectedFileSizeMiB":34,
      "permanentSoftwareName":"driver-station-app",
      "sha256":"aeb61b525a289f14d9d4c2a1faf3074e4d9cc324c16d00ee94d2a9b8c6ddb74d",
      "releaseDate":"2020-12-16T22:56:27.773Z",
      "releaseNotes":"## Version 6.1 (20201209-113742)\n\n* Makes the scan button on the configuration screen update the list of Expansion Hubs connected via RS-485\n    * Fixes [SkyStone issue #143](https://github.com/FIRST-Tech-Challenge/SkyStone/issues/143)\n* Improves web interface compatibility with older browser and Android System WebView versions.\n* Fixes issue in UVC driver where some cameras (e.g. certain MS Lifecams) which reported frame intervals as rounded rather than truncated values (e.g. `666667*100ns` instead of `666666*100ns` for 15FPS) would fail to start streaming.\n* Adds support in UVC driver for virtual PTZ control\n* Adds support in UVC driver for gain (ISO) control\n* Adds support in UVC driver for enabling/disable AE priority. This setting provides a means to tell the camera firmware either\n    * A) It can undershoot the requested frame rate in order to provide a theoretically better image (i.e. with a longer exposure than the inter-frame period of the selected frame rate allows)\n    * B) It *must* meet the inter-frame deadline for the selected frame rate, even if the image may be underexposed as a result\n* Adds support for the Control Hub OS 1.1.2 Robot Controller watchdog\n    * The Robot Controller app will be restarted if it stops responding for more than 10 seconds\n* Adds support for using the Driver Station app on Android 10+\n* Introduces an automatic TeleOp preselection feature\n    * For details and usage guide, please see [this wiki entry](https://github.com/FIRST-Tech-Challenge/FtcRobotController/wiki/Automatically-Loading-a-Driver-Controlled-Op-Mode)\n* Shows icon next to OpMode name in the OpMode list dropdown on the Driver Station to indicate the source of the OpMode (i.e. the programming tool used to create it)\n* Fixes issue where the Driver Station app would exit after displaying the Configuring WiFi Direct screen\n* Fixes Blocks and OnBotJava prompts when accessed via the REV Hardware Client\n\n\n",
      "url":"https://github.com/FIRST-Tech-Challenge/FtcRobotController/releases/download/v6.1/FtcDriverStation-release.apk",
      "versionCode":39,
      "versionString":"6.1"
    }, {
      "expectedFileSizeMiB":34,
      "permanentSoftwareName":"driver-station-app",
      "releaseDate":"2020-12-16T22:56:27.773Z",
      "releaseNotes":"## Version 6.0 (20200921-085816)\n\n### Important Notes\n* Version 6.0 is the minimum legal version for the Ultimate Goal season.\n* Version 5.5 was a moderately large off-season, August 2020, drop.  It's worth reviewing those release notes below also.\n* Version 5.5 and greater will not work on older Android 4.x and 5.x phones.  Users must upgrade to an approved Android 6.x device or newer.\n* The default PIDF values for REV motors have been reverted to the default PID values that were used in the 2018-2019 season\n    * This change was made because the 2018-2019 values turned out to work better for many mechanisms\n    * This brings the behavior of the REV motors in line with the behavior of all other motors\n    * If you prefer the 2019-2020 season's behavior for REV motors, here are the PIDF values that were in place, so that you can manually set them in your OpModes:  \n      <br>\n      **HD Hex motors (all gearboxes):**  \n      Velocity PIDF values: `P = 1.17`, `I = 0.117`, `F = 11.7`  \n      Position PIDF values: `P = 5.0`  \n      **Core Hex motor:**  \n      Velocity PIDF values: `P = 4.96`, `I = 0.496`, `F = 49.6`  \n      Position PIDF values: `P = 5.0`\n\n### New features\n* Includes TensorFlow inference model and sample op modes to detect Ultimate Goal Starter Stacks (four rings vs single ring stack).\n* Includes Vuforia Ultimate Goal vision targets and sample op modes.\n* Introduces a digital zoom feature for TensorFlow object detection (to detect objects more accurately at greater distances).\n* Adds configuration entry for the REV UltraPlanetary HD Hex motor\n\n### Enhancements\n* Adds setGain() and getGain() methods to the NormalizedColorSensor interface\n    * By setting the gain of a color sensor, you can adjust for different lighting conditions.\n      For example, if you detect lower color values than expected, you can increase the gain.\n    * The gain value is only applied to the argb() and getNormalizedColors() methods, not to the raw color methods.\n      The getNormalizedColors() method is recommended for ease-of-use and clarity, since argb() has to be converted.\n    * Updates SensorColor Java sample to demonstrate gain usage\n* Merges SensorREVColorDistance Java sample into SensorColor Java sample, which showcases best practices for all color sensors\n* Improves retrieving values from the REV Color Sensor V3\n    * Updates the normalization calculation of the RGB channels\n    * Improves the calculation of the alpha channel (can be used as an overall brightness indicator)\n    * Fixes the default sensor resolution, which caused issues with bright environments\n    * Adds support for changing the resolution and measuring rate of the Broadcom sensor chip\n    * Removes IR readings and calculations not meant for the Broadcom sensor chip\n\n### Bug fixes\n* Improved reliability of BNO055IMU IMU initialization to prevent random initialization failures (which manifested as `Problem with 'imu'`).\n\n## Version 5.5 (20200824-090813)\n\n### New features\n* Adds support for calling custom Java classes from Blocks OpModes (fixes [SkyStone issue #161](https://github.com/FIRST-Tech-Challenge/SkyStone/issues/161)).\n    * Classes must be in the org.firstinspires.ftc.teamcode package.\n    * Methods must be public static and have no more than 21 parameters.\n    * Parameters declared as OpMode, LinearOpMode, Telemetry, and HardwareMap are supported and the\n      argument is provided automatically, regardless of the order of the parameters. On the block,\n      the sockets for those parameters are automatically filled in.\n    * Parameters declared as char or java.lang.Character will accept any block that returns text\n      and will only use the first character in the text.\n    * Parameters declared as boolean or java.lang.Boolean will accept any block that returns boolean.\n    * Parameters declared as byte, java.lang.Byte, short, java.lang.Short, int, java.lang.Integer,\n      long, or java.lang.Long,  will accept any block that returns a number and will round that\n      value to the nearest whole number.\n    * Parameters declared as float, java.lang.Float, double, java.lang.Double will accept any\n      block that returns a number.\n* Adds telemetry API method for setting display format\n    * Classic\n    * Monospace\n    * HTML (certain tags only)\n* Adds blocks support for switching cameras.\n* Adds Blocks support for TensorFlow Object Detection with a custom model.\n* Adds support for uploading a custom TensorFlow Object Detection model in the Manage page, which\n  is especially useful for Blocks and OnBotJava users.\n* Shows new Control Hub blink codes when the WiFi band is switched using the Control Hub's button (only possible on Control Hub OS 1.1.2)\n* Adds new warnings which can be disabled in the Advanced RC Settings\n    * Mismatched app versions warning\n    * Unnecessary 2.4 GHz WiFi usage warning\n    * REV Hub is running outdated firmware (older than version 1.8.2)\n* Adds support for Sony PS4 gamepad, and reworks how gamepads work on the Driver Station\n    * Removes preference which sets gamepad type based on driver position. Replaced with menu which allows specifying type for gamepads with unknown VID and PID\n    * Attempts to auto-detect gamepad type based on USB VID and PID\n    * If gamepad VID and PID is not known, use type specified by user for that VID and PID\n    * If gamepad VID and PID is not known AND the user has not specified a type for that VID and PID, an educated guess is made about how to map the gamepad\n* Driver Station will now attempt to automatically recover from a gamepad disconnecting, and re-assign it to the position it was assigned to when it dropped\n    * If only one gamepad is assigned and it drops: it can be recovered\n    * If two gamepads are assigned, and have **different** VID/PID signatures, and only one drops: it will be recovered\n    * If two gamepads are assigned, and have **different** VID/PID signatures, and BOTH drop: both will be recovered\n    * If two gamepads are assigned, and have **the same** VID/PID signatures, and only one drops: it will be recovered\n    * If two gamepads are assigned, and have **the same** VID/PID signatures, and BOTH drop: **neither** will be recovered, because of the ambiguity of the gamepads when they re-appear on the USB bus.\n    * There is currently one known edge case: if there are **two** gamepads with **the same** VID/PID signature plugged in, **but only one is assigned**, and they BOTH drop, it's a 50-50 chance of which one will be chosen for automatic recovery to the assigned position: it is determined by whichever one is re-enumerated first by the USB bus controller.\n* Adds landscape user interface to Driver Station\n    * New feature: practice timer with audio cues\n    * New feature (Control Hub only): wireless network connection strength indicator (0-5 bars)\n    * New feature (Control Hub only): tapping on the ping/channel display will switch to an alternate display showing radio RX dBm and link speed (tap again to switch back)\n    * The layout will NOT autorotate. You can switch the layout from the Driver Station's settings menu.\n### Breaking changes\n* Removes support for Android versions 4.4 through 5.1 (KitKat and Lollipop). The minSdkVersion is now 23.\n* Removes the deprecated `LinearOpMode` methods `waitOneFullHardwareCycle()` and `waitForNextHardwareCycle()`\n### Enhancements\n* Handles RS485 address of Control Hub automatically\n    * The Control Hub is automatically given a reserved address\n    * Existing configuration files will continue to work\n    * All addresses in the range of 1-10 are still available for Expansion Hubs\n    * The Control Hub light will now normally be solid green, without blinking to indicate the address\n    * The Control Hub will not be shown on the Expansion Hub Address Change settings page\n* Improves REV Hub firmware updater\n    * The user can now choose between all available firmware update files\n    * Version 1.8.2 of the REV Hub firmware is bundled into the Robot Controller app.\n    * Text was added to clarify that Expansion Hubs can only be updated via USB.\n    * Firmware update speed was reduced to improve reliability\n    * Allows REV Hub firmware to be updated directly from the Manage webpage\n* Improves log viewer on Robot Controller\n    * Horizontal scrolling support (no longer word wrapped)\n    * Supports pinch-to-zoom\n    * Uses a monospaced font\n    * Error messages are highlighted\n    * New color scheme\n* Attempts to force-stop a runaway/stuck OpMode without restarting the entire app\n    * Not all types of runaway conditions are stoppable, but if the user code attempts to talk to hardware during the runaway, the system should be able to capture it.\n* Makes various tweaks to the Self Inspect screen\n    * Renames \"OS version\" entry to \"Android version\"\n    * Renames \"WiFi Direct Name\" to \"WiFi Name\"\n    * Adds Control Hub OS version, when viewing the report of a Control Hub\n    * Hides the airplane mode entry, when viewing the report of a Control Hub\n    * Removes check for ZTE Speed Channel Changer\n    * Shows firmware version for **all** Expansion and Control Hubs\n* Reworks network settings portion of Manage page\n    * All network settings are now applied with a single click\n    * The WiFi Direct channel of phone-based Robot Controllers can now be changed from the Manage page\n    * WiFi channels are filtered by band (2.4 vs 5 GHz) and whether they overlap with other channels\n    * The current WiFi channel is pre-selected on phone-based Robot Controllers, and Control Hubs running OS 1.1.2 or later.\n    * On Control Hubs running OS 1.1.2 or later, you can choose to have the system automatically select a channel on the 5 GHz band\n* Improves OnBotJava\n    * New light and dark themes replace the old themes (chaos, github, chrome,...)\n        * the new default theme is `light` and will be used when you first update to this version\n    * OnBotJava now has a tabbed editor\n    * Read-only offline mode\n* Improves function of \"exit\" menu item on Robot Controller and Driver Station\n    * Now guaranteed to be fully stopped and unloaded from memory\n* Shows a warning message if a LinearOpMode exists prematurely due to failure to monitor for the start condition\n* Improves error message shown when the Driver Station and Robot Controller are incompatible with each other\n* Driver Station OpMode Control Panel now disabled while a Restart Robot is in progress\n* Disables advanced settings related to WiFi direct when the Robot Controller is a Control Hub.\n* Tint phone battery icons on Driver Station when low/critical.\n* Uses names \"Control Hub Portal\" and \"Control Hub\" (when appropriate) in new configuration files\n* Improve I2C read performance\n    * Very large improvement on Control Hub; up to ~2x faster with small (e.g. 6 byte) reads\n    * Not as apparent on Expansion Hubs connected to a phone\n* Update/refresh build infrastructure\n    * Update to 'androidx' support library from 'com.android.support:appcompat', which is end-of-life\n    * Update targetSdkVersion and compileSdkVersion to 28\n    * Update Android Studio's Android plugin to latest\n    * Fix reported build timestamp in 'About' screen\n* Add sample illustrating manual webcam use: ConceptWebcam\n\n\n### Bug fixes\n* Fixes [SkyStone issue #248](https://github.com/FIRST-Tech-Challenge/SkyStone/issues/248)\n* Fixes [SkyStone issue #232](https://github.com/FIRST-Tech-Challenge/SkyStone/issues/232) and\n  modifies bulk caching semantics to allow for cache-preserving MANUAL/AUTO transitions.\n* Improves performance when REV 2M distance sensor is unplugged\n* Improves readability of Toast messages on certain devices\n* Allows a Driver Station to connect to a Robot Controller after another has disconnected\n* Improves generation of fake serial numbers for UVC cameras which do not provide a real serial number\n    * Previously some devices would assign such cameras a serial of `0:0` and fail to open and start streaming\n    * Fixes [ftc_app issue #638](https://github.com/ftctechnh/ftc_app/issues/638).\n* Fixes a slew of bugs with the Vuforia camera monitor including:\n    * Fixes bug where preview could be displayed with a wonky aspect ratio\n    * Fixes bug where preview could be cut off in landscape\n    * Fixes bug where preview got totally messed up when rotating phone\n    * Fixes bug where crosshair could drift off target when using webcams\n* Fixes issue in UVC driver on some devices ([ftc_app 681](https://github.com/ftctechnh/ftc_app/issues/681)) if streaming was started/stopped multiple times in a row\n    * Issue manifested as kernel panic on devices which do not have [this kernel patch](https://lore.kernel.org/patchwork/patch/352400/).\n    * On affected devices which **do** have the patch, the issue was manifest as simply a failure to start streaming.\n    * The Tech Team believes that the root cause of the issue is a bug in the Linux kernel XHCI driver. A workaround was implemented in the SDK UVC driver.\n* Fixes bug in UVC driver where often half the frames from the camera would be dropped (e.g. only 15FPS delivered during a streaming session configured for 30FPS).\n* Fixes issue where TensorFlow Object Detection would show results whose confidence was lower than\n  the minimum confidence parameter.\n* Fixes a potential exploitation issue of [CVE-2019-11358](https://www.cvedetails.com/cve/CVE-2019-11358/) in OnBotJava\n* Fixes changing the address of an Expansion Hub with additional Expansion Hubs connected to it\n* Preserves the Control Hub's network connection when \"Restart Robot\" is selected\n* Fixes issue where device scans would fail while the Robot was restarting\n* Fix RenderScript usage\n    * Use androidx.renderscript variant: increased compatibility\n    * Use RenderScript in Java mode, not native: simplifies build\n* Fixes webcam-frame-to-bitmap conversion problem: alpha channel wasn't being initialized, only R, G, & B\n* Fixes possible arithmetic overflow in Deadline\n* Fixes deadlock in Vuforia webcam support which could cause 5-second delays when stopping OpMode\n\n## Version 5.4 (20200108-101156)\n* Fixes [SkyStone issue #88](https://github.com/FIRST-Tech-Challenge/SkyStone/issues/88)\n* Adds an inspection item that notes when a robot controller (Control Hub) is using the factory default password.\n* Fixes [SkyStone issue #61](https://github.com/FIRST-Tech-Challenge/SkyStone/issues/61)\n* Fixes [SkyStone issue #142](https://github.com/FIRST-Tech-Challenge/SkyStone/issues/142)\n* Fixes [ftc_app issue #417](https://github.com/ftctechnh/ftc_app/issues/417) by adding more current and voltage monitoring capabilities for REV Hubs.\n* Fixes [a crash sometimes caused by OnBotJava activity](https://ftcforum.firstinspires.org/forum/ftc-technology/76217-onbotjava-crashes-robot-controller)\n* Improves OnBotJava autosave functionality [ftc_app #738](https://github.com/ftctechnh/ftc_app/issues/738)\n* Fixes system responsiveness issue when an Expansion Hub is disconnected\n* Fixes issue where IMU initialization could prevent Op Modes from stopping\n* Fixes issue where AndroidTextToSpeech.speak() would fail if it was called too early\n* Adds telemetry.speak() methods and blocks, which cause the Driver Station (if also updated) to speak text\n* Adds and improves Expansion Hub-related warnings\n    * Improves Expansion Hub low battery warning\n        * Displays the warning immediately after the hub reports it\n        * Specifies whether the condition is current or occurred temporarily during an OpMode run\n        * Displays which hubs reported low battery\n    * Displays warning when hub loses and regains power during an OpMode run\n        * Fixes the hub's LED pattern after this condition\n    * Displays warning when Expansion Hub is not responding to commands\n        * Specifies whether the condition is current or occurred temporarily during an OpMode run\n    * Clarifies warning when Expansion Hub is not present at startup\n        * Specifies that this condition requires a Robot Restart before the hub can be used.\n        * The hub light will now accurately reflect this state\n    * Improves logging and reduces log spam during these conditions\n* Syncs the Control Hub time and timezone to a connected web browser programming the robot, if a Driver Station is not available.\n* Adds bulk read functionality for REV Hubs\n  * A bulk caching mode must be set at the Hub level with `LynxModule#setBulkCachingMode()`. This applies to all relevant SDK hardware classes that reference that Hub.\n  * The following following Hub bulk caching modes are available:\n    * `BulkCachingMode.OFF` (default): All hardware calls operate as usual. Bulk data can read through `LynxModule#getBulkData()` and processed manually.\n    * `BulkCachingMode.AUTO`: Applicable hardware calls are served from a bulk read cache that is cleared/refreshed automatically to ensure identical commands don't hit the same cache. The cache can also be cleared manually with `LynxModule#clearBulkCache()`, although this is not recommended.\n    * (advanced users) `BulkCachingMode.MANUAL`: Same as `BulkCachingMode.AUTO` except the cache is never cleared automatically. To avoid getting stale data, the cache must be manually cleared at the beginning of each loop body or as the user deems appropriate.\n* Removes PIDF Annotation values added in Rev 5.3 (to AndyMark, goBILDA and TETRIX motor configurations).\n  * The new motor types will still be available but their Default control behavior will revert back to Rev 5.2\n* Adds new `ConceptMotorBulkRead` sample Opmode to demonstrate and compare Motor Bulk-Read modes for reducing I/O latencies.\n\n## Version 5.3 (20191004-112306)\n* Fixes external USB/UVC webcam support\n* Makes various bugfixes and improvements to Blocks page, including but not limited to:\n    * Many visual tweaks\n    * Browser zoom and window resize behave better\n    * Resizing the Java preview pane works better and more consistently across browsers\n    * The Java preview pane consistently gets scrollbars when needed\n    * The Java preview pane is hidden by default on phones\n    * Internet Explorer 11 should work\n    * Large dropdown lists display properly on lower res screens\n    * Disabled buttons are now visually identifiable as disabled\n    * A warning is shown if a user selects a TFOD sample, but their device is not compatible\n    * Warning messages in a Blocks op mode are now visible by default.\n* Adds goBILDA 5201 and 5202 motors to Robot Configurator\n* Adds PIDF Annotation values to AndyMark, goBILDA and TETRIX motor configurations.\n    This has the effect of causing the RUN_USING_ENCODERS and RUN_TO_POSITION modes to use\n    PIDF vs PID closed loop control on these motors.  This should provide more responsive, yet stable, speed control.\n    PIDF adds Feedforward control to the basic PID control loop.\n    Feedforward is useful when controlling a motor's speed because it \"anticipates\" how much the control voltage\n    must change to achieve a new speed set-point, rather than requiring the integrated error to change sufficiently.\n    The PIDF values were chosen to provide responsive, yet stable, speed control on a lightly loaded motor.\n    The more heavily a motor is loaded (drag or friction), the more noticable the PIDF improvement will be.\n* Fixes startup crash on Android 10\n* Fixes [ftc_app issue #712](https://github.com/ftctechnh/ftc_app/issues/712) (thanks to FROGbots-4634)\n* Fixes [ftc_app issue #542](https://github.com/ftctechnh/ftc_app/issues/542)\n* Allows \"A\" and lowercase letters when naming device through RC and DS apps.\n\n## Version 5.2 (20190905-083277)\n* Fixes extra-wide margins on settings activities, and placement of the new configuration button\n* Adds Skystone Vuforia image target data.\n   * Includes sample Skystone Vuforia Navigation op modes (Java).\n   * Includes sample Skystone Vuforia Navigation op modes (Blocks).\n* Adds TensorFlow inference model (.tflite) for Skystone game elements.\n   * Includes sample Skystone TensorFlow op modes (Java).\n   * Includes sample Skystone TensorFlow op modes (Blocks).\n* Removes older (season-specific) sample op modes.\n* Includes 64-bit support (to comply with [Google Play requirements](https://android-developers.googleblog.com/2019/01/get-your-apps-ready-for-64-bit.html)).\n* Protects against Stuck OpModes when a Restart Robot is requested. (Thanks to FROGbots-4634) ([ftc_app issue #709](https://github.com/ftctechnh/ftc_app/issues/709))\n* Blocks related changes:\n   * Fixes bug with blocks generated code when hardware device name is a java or javascript reserved word.\n   * Shows generated java code for blocks, even when hardware items are missing from the active configuration.\n   * Displays warning icon when outdated Vuforia and TensorFlow blocks are used ([SkyStone issue #27](https://github.com/FIRST-Tech-Challenge/SkyStone/issues/27))\n\n## Version 5.1 (20190820-222104)\n* Defines default PIDF parameters for the following motors:\n    * REV Core Hex Motor\n    * REV 20:1 HD Hex Motor\n    * REV 40:1 HD Hex Motor\n* Adds back button when running on a device without a system back button (such as a Control Hub)\n* Allows a REV Control Hub to update the firmware on a REV Expansion Hub via USB\n* Fixes [SkyStone issue #9](https://github.com/FIRST-Tech-Challenge/SkyStone/issues/9)\n* Fixes [ftc_app issue #715](https://github.com/ftctechnh/ftc_app/issues/715)\n* Prevents extra DS User clicks by filtering based on current state.\n* Prevents incorrect DS UI state changes when receiving new OpMode list from RC\n* Adds support for REV Color Sensor V3\n* Adds a manual-refresh DS Camera Stream for remotely viewing RC camera frames.\n    * To show the stream on the DS, initialize **but do not run** a stream-enabled opmode, select the Camera Stream option in the DS menu, and tap the image to refresh. This feature is automatically enabled when using Vuforia or TFOD no additional RC configuration is required for typical use cases. To hide the stream, select the same menu item again.\n    * Note that gamepads are disabled and the selected opmode cannot be started while the stream is open as a safety precaution.\n    * To use custom streams, consult the API docs for `CameraStreamServer#setSource` and `CameraStreamSource`.\n* Adds many Star Wars sounds to RobotController resources.\n* Added Skystone Sounds Chooser Sample Program.\n* Switches out startup, connect chimes, and error/warning sounds for Star Wars sounds\n* Updates OnBot Java to use a WebSocket for communication with the robot\n    * The OnBot Java page no longer has to do a full refresh when a user switches from editing one file to another\n\nKnown issues:\n* Camera Stream\n    * The Vuforia camera stream inherits the issues present in the phone preview (namely [ftc_app issue #574](https://github.com/ftctechnh/ftc_app/issues/574)). This problem does not affect the TFOD camera stream even though it receives frames from Vuforia.\n    * The orientation of the stream frames may not always match the phone preview. For now, these frames may be rotated manually via a custom `CameraStreamSource` if desired.\n* OnBotJava\n    * Browser back button may not always work correctly\n    * It's possible for a build to be queued, but not started. The OnBot Java build console will display a warning if this occurs.\n    * A user might not realize they are editing a different file if the user inadvertently switches from one file to another since this switch is now seamless. The name of the currently open file is displayed in the browser tab.\n\n## Version 5.0 (built on 19.06.14)\n * Support for the REV Robotics Control Hub.\n * Adds a Java preview pane to the Blocks editor.\n * Adds a new offline export feature to the Blocks editor.\n * Display wifi channel in Network circle on Driver Station.\n * Adds calibration for Logitech C270\n * Updates build tooling and target SDK.\n * Compliance with Google's permissions infrastructure (Required after build tooling update).\n * Keep Alives to mitigate the Motorola wifi scanning problem.  Telemetry substitute no longer necessary.\n * Improves Vuforia error reporting.\n * Fixes ftctechnh/ftc_app issues 621, 713.\n * Miscellaneous bug fixes and improvements.\n\n## Version 4.3 (built on 18.10.31)\n * Includes missing TensorFlow-related libraries and files.\n\n## Version 4.2 (built on 18.10.30)\n * Includes fix to avoid deadlock situation with WatchdogMonitor which could result in USB communication errors.\n     - Comm error appeared to require that user disconnect USB cable and restart the Robot Controller app to recover.\n     - robotControllerLog.txt would have error messages that included the words \"E RobotCore: lynx xmit lock: #### abandoning lock:\"\n * Includes fix to correctly list the parent module address for a REV Robotics Expansion Hub in a configuration (.xml) file.\n     - Bug in versions 4.0 and 4.1 would incorrect list the address module for a parent REV Robotics device as \"1\".\n     - If the parent module had a higher address value than the daisy-chained module, then this bug would prevent the Robot Controller from communicating with the downstream Expansion Hub.\n * Added requirement for ACCESS_COARSE_LOCATION to allow a Driver Station running Android Oreo to scan for Wi-Fi Direct devices.\n * Added google() repo to build.gradle because aapt2 must be downloaded from the google() repository beginning with version 3.2 of the Android Gradle Plugin.\n     - Important Note: Android Studio users will need to be connected to the Internet the first time build the ftc_app project.\n     - Internet connectivity is required for the first build so the appropriate files can be downloaded from the Google repository.\n     - Users should not need to be connected to the Internet for subsequent builds.\n     - This should also fix buid issue where Android Studio would complain that it \"Could not find com.android.tools.lint:lint-gradle:26.1.4\" (or similar).\n * Added support for REV Spark Mini motor controller as part of the configuration menu for a servo/PWM port on the REV Expansion Hub.\n * Provide examples for playing audio files in an Op Mode.\n * Block Development Tool Changes\n     - Includes a fix for a problem with the Velocity blocks that were reported in the FTC Technology forum (Blocks Programming subforum).\n     - Change the \"Save completed successfully.\" message to a white color so it will contrast with a green background.\n     - Fixed the \"Download image\" feature so it will work if there are text blocks in the op mode.\n * Introduce support for Google's TensorFlow Lite technology for object detetion for 2018-2019 game.\n     - TensorFlow lite can recognize Gold Mineral and Silver Mineral from 2018-2019 game.\n     - Example Java and Block op modes are included to show how to determine the relative position of the gold block (left, center, right).\n\n## Version 4.1 (released on 18.09.24)\n\nChanges include:\n * Fix to prevent crash when deprecated configuration annotations are used.\n * Change to allow FTC Robot Controller APK to be auto-updated using FIRST Global Control Hub update scripts.\n * Removed samples for non supported / non legal hardware.\n * Improvements to Telemetry.addData block with \"text\" socket.\n * Updated Blocks sample op mode list to include Rover Ruckus Vuforia example.\n * Update SDK library version number.\n\n## Version 4.0 (released on 18.09.12)\n\nChanges include:\n * Initial support for UVC compatible cameras\n    - If UVC camera has a unique serial number, RC will detect and enumerate by serial number.\n    - If UVC camera lacks a unique serial number, RC will only support one camera of that type connected.\n    - Calibration settings for a few cameras are included (see TeamCode/src/main/res/xml/teamwebcamcalibrations.xml for details).\n    - User can upload calibration files from Program and Manage web interface.\n    - UVC cameras seem to draw a fair amount of electrical current from the USB bus.\n         + This does not appear to present any problems for the REV Robotics Control Hub.\n\t + This does seem to create stability problems when using some cameras with an Android phone-based Robot Controller.\n\t + FTC Tech Team is investigating options to mitigate this issue with the phone-based Robot Controllers.\n    - Updated sample Vuforia Navigation and VuMark Op Modes to demonstrate how to use an internal phone-based camera and an external UVC webcam.\n\n * Support for improved motor control.\n    - REV Robotics Expansion Hub firmware 1.8 and greater will support a feed forward mechanism for closed loop motor control.\n    - FTC SDK has been modified to support PIDF coefficients (proportional, integral, derivative, and feed forward).\n    - FTC Blocks development tool modified to include PIDF programming blocks.\n    - Deprecated older PID-related methods and variables.\n    - REV's 1.8.x PIDF-related changes provide a more linear and accurate way to control a motor.\n\n * Wireless\n    - Added 5GHz support for wireless channel changing for those devices that support it.\n        + Tested with Moto G5 and E4 phones.\n\t+ Also tested with other (currently non-approved) phones such as Samsung Galaxy S8.\n\n* Improved Expansion Hub firmware update support in Robot Controller app\n    - Changes to make the system more robust during the firmware update process (when performed through Robot Controller app).\n    - User no longer has to disconnect a downstream daisy-chained Expansion Hub when updating an Expansion Hub's firmware.\n        + If user is updating an Expansion Hub's firmware through a USB connection, he/she does not have to disconnect RS485 connection to other Expansion Hubs.\n\t+ The user still must use a USB connection to update an Expansion Hub's firmware.\n\t+ The user cannot update the Expansion Hub firmware for a downstream device that is daisy chained through an RS485 connection.\n    - If an Expansion Hub accidentally gets \"bricked\" the Robot Controller app is now more likely to recognize the Hub when it scans the USB bus.\n        + Robot Controller app should be able to detect an Expansion Hub, even if it accidentally was bricked in a previous update attempt.\n\t+ Robot Controller app should be able to install the firmware onto the Hub, even if if accidentally was bricked in a previous update attempt.\n\n * Resiliency\n    - FTC software can detect and enable an FTDI reset feature that is available with REV Robotics v1.8 Expansion Hub firmware and greater.\n        + When enabled, the Expansion Hub can detect if it hasn't communicated with the Robot Controller over the FTDI (USB) connection.\n\t+ If the Hub hasn't heard from the Robot Controller in a while, it will reset the FTDI connection.\n\t+ This action helps system recover from some ESD-induced disruptions.\n    - Various fixes to improve reliability of FTC software.\n\n * Blocks\n    - Fixed errors with string and list indices in blocks export to java.\n    - Support for USB connected UVC webcams.\n    - Refactored optimized Blocks Vuforia code to support Rover Ruckus image targets.\n    - Added programming blocks to support PIDF (proportional, integral, derivative and feed forward) motor control.\n    - Added formatting options (under Telemetry and Miscellaneous categories) so user can set how many decimal places to display a numerical value.\n    - Support to play audio files (which are uploaded through Blocks web interface) on Driver Station in addition to the Robot Controller.\n    - Fixed bug with Download Image of Blocks feature.\n    - Support for REV Robotics Blinkin LED Controller.\n    - Support for REV Robotics 2m Distance Sensor.\n    - Added support for a REV Touch Sensor (no longer have to configure as a generic digital device).\n    - Added blocks for DcMotorEx methods.\n        + These are enhanced methods that you can use when supported by the motor controller hardware.\n\t+ The REV Robotics Expansion Hub supports these enhanced methods.\n\t+ Enhanced methods include methods to get/set motor velocity (in encoder pulses per second), get/set PIDF coefficients, etc..\n\n * Modest Improvements in Logging\n    - Decrease frequency of battery checker voltage statements.\n    - Removed non-FTC related log statements (wherever possible).\n    - Introduced a \"Match Logging\" feature.\n        + Under \"Settings\" a user can enable/disable this feature (it's disabled by default).\n\t+ If enabled, user provides a \"Match Number\" through the Driver Station user interface (top of the screen).\n\t    * The Match Number is used to create a log file specifically with log statements from that particular Op Mode run.\n\t    * Match log files are stored in /sdcard/FIRST/matlogs on the Robot Controller.\n\t    * Once an op mode run is complete, the Match Number is cleared.\n\t    * This is a convenient way to create a separate match log with statements only related to a specific op mode run.\n\n * New Devices\n    - Support for REV Robotics Blinkin LED Controller.\n    - Support for REV Robotics 2m Distance Sensor.\n    - Added configuration option for REV 20:1 HD Hex Motor.\n    - Added support for a REV Touch Sensor (no longer have to configure as a generic digital device).\n\n * Miscellaneous\n    - Fixed some errors in the definitions for acceleration and velocity in our javadoc documentation.\n    - Added ability to play audio files on Driver Station\n    - When user is configuring an Expansion Hub, the LED on the Expansion Hub will change blink pattern (purple-cyan)  to indicate which Hub is currently being configured.\n    - Renamed I2cSensorType to I2cDeviceType.\n    - Added an external sample Op Mode that demonstrates localization using 2018-2019 (Rover Ruckus presented by QualComm) Vuforia targets.\n    - Added an external sample Op Mode that demonstrates how to use the REV Robotics 2m Laser Distance Sensor.\n    - Added an external sample Op Mode that demonstrates how to use the REV Robotics Blinkin LED Controller.\n    - Re-categorized external Java sample Op Modes to \"TeleOp\" instead of \"Autonomous\".\n\nKnown issues:\n * Initial support for UVC compatible cameras\n    - UVC cameras seem to draw significant amount of current from the USB bus.\n        + This does not appear to present any problems for the REV Robotics Control Hub.\n\t+ This does seem to create stability problems when using some cameras with an Android phone-based Robot Controller.\n\t+ FTC Tech Team is investigating options to mitigate this issue with the phone-based Robot Controllers.\n    - There might be a possible deadlock which causes the RC to become unresponsive when using a UVC webcam with a Nougat Android Robot Controller.\n\n * Wireless\n    - When user selects a wireless channel, this channel does not necessarily persist if the phone is power cycled.\n        + Tech Team is hoping to eventually address this issue in a future release.\n\t+ Issue has been present since apps were introduced (i.e., it is not new with the v4.0 release).\n    - Wireless channel is not currently displayed for WiFi Direct connections.\n\n * Miscellaneous\n    - The blink indication feature that shows which Expansion Hub is currently being configured does not work for a newly created configuration file.\n        + User has to first save a newly created configuration file and then close and re-edit the file in order for blink indicator to work.\n\n## Version 3.6 (built on 17.12.18)\n\nChanges include:\n * Blocks Changes\n     - Uses updated Google Blockly software to allow users to edit their op modes on Apple iOS devices (including iPad and iPhone).\n     - Improvement in Blocks tool to handle corrupt op mode files.\n     - Autonomous op modes should no longer get switched back to tele-op after re-opening them to be edited.\n     - The system can now detect type mismatches during runtime and alert the user with a message on the Driver Station.\n * Updated javadoc documentation for setPower() method to reflect correct range of values (-1 to +1).\n * Modified VuforiaLocalizerImpl to allow for user rendering of frames\n     - Added a user-overrideable onRenderFrame() method which gets called by the class's renderFrame() method.\n\n## Version 3.5 (built on 17.10.30)\n\nChanges with version 3.5 include:\n * Introduced a fix to prevent random op mode stops, which can occur after the Robot Controller app has been paused and then resumed (for example, when a user temporarily turns off the display of the Robot Controller phone, and then turns the screen back on).\n * Introduced a fix to prevent random op mode stops, which were previously caused by random peer disconnect events on the Driver Station.\n * Fixes issue where log files would be closed on pause of the RC or DS, but not re-opened upon resume.\n * Fixes issue with battery handler (voltage) start/stop race.\n * Fixes issue where Android Studio generated op modes would disappear from available list in certain situations.\n * Fixes problem where OnBot Java would not build on REV Robotics Control Hub.\n * Fixes problem where OnBot Java would not build if the date and time on the Robot Controller device was \"rewound\" (set to an earlier date/time).\n * Improved error message on OnBot Java that occurs when renaming a file fails.\n * Removed unneeded resources from android.jar binaries used by OnBot Java to reduce final size of Robot Controller app.\n * Added MR_ANALOG_TOUCH_SENSOR block to Blocks Programming Tool.\n\n## Version 3.4 (built on 17.09.06)\n\nChanges with version 3.4 include:\n * Added telemetry.update() statement for BlankLinearOpMode template.\n * Renamed sample Block op modes to be more consistent with Java samples.\n * Added some additional sample Block op modes.\n * Reworded OnBot Java readme slightly.\n\n## Version 3.3 (built on 17.09.04)\n\nThis version of the software includes improves for the FTC Blocks Programming Tool and the OnBot Java Programming Tool.\n\nChanges with verion 3.3 include:\n * Android Studio ftc_app project has been updated to use Gradle Plugin 2.3.3.\n * Android Studio ftc_app project is already using gradle 3.5 distribution.\n * Robot Controller log has been renamed to /sdcard/RobotControllerLog.txt (note that this change was actually introduced w/ v3.2).\n * Improvements in I2C reliability.\n * Optimized I2C read for REV Expansion Hub, with v1.7 firmware or greater.\n * Updated all external/samples (available through OnBot and in Android project folder).\n * Vuforia\n    - Added support for VuMarks that will be used for the 2017-2018 season game.\n * Blocks\n    - Update to latest Google Blockly release.\n    - Sample op modes can be selected as a template when creating new op mode.\n    - Fixed bug where the blocks would disappear temporarily when mouse button is held down.\n    - Added blocks for Range.clip and Range.scale.\n    - User can now disable/enable Block op modes.\n    - Fix to prevent occasional Blocks deadlock.\n * OnBot Java\n    - Significant improvements with autocomplete function for OnBot Java editor.\n    - Sample op modes can be selected as a template when creating new op mode.\n    - Fixes and changes to complete hardware setup feature.\n    - Updated (and more useful) onBot welcome message.\n\nKnown issues:\n * Android Studio\n    - After updating to the new v3.3 Android Studio project folder, if you get error messages indicating \"InvalidVirtualFileAccessException\" then you might need to do a File->Invalidate Caches / Restart to clear the error.\n * OnBot Java\n    - Sometimes when you push the build button to build all op modes, the RC returns an error message that the build failed.  If you press the build button a second time, the build typically suceeds.\n\n## Version 3.2 (built on 17.08.02)\n\nThis version of the software introduces the \"OnBot Java\" Development Tool.  Similar to the FTC Blocks Development Tool, the FTC OnBot Java Development Tool allows a user to create, edit and build op modes dynamically using only a Javascript-enabled web browser.\n\nThe OnBot Java Development Tool is an integrated development environment (IDE) that is served up by the Robot Controller.  Op modes are created and edited using a Javascript-enabled browser (Google Chromse is recommended).  Op modes are saved on the Robot Controller Android device directly.\n\nThe OnBot Java Development Tool provides a Java programming environment that does NOT need Android Studio.\n\n\n\nChanges with version 3.2 include:\n * Enhanced web-based development tools\n    - Introduction of OnBot Java Development Tool.\n    - Web-based programming and management features are \"always on\" (user no longer needs to put Robot Controller into programming mode).\n    - Web-based management interface (where user can change Robot Controller name and also easily download Robot Controller log file).\n    - OnBot Java, Blocks and Management features available from web based interface.\n\n* Blocks Programming Development Tool:\n    - Changed \"LynxI2cColorRangeSensor\" block to \"REV Color/range sensor\" block.\n    - Fixed tooltip for ColorSensor.isLightOn block.\n    Added blocks for ColorSensor.getNormalizedColors and LynxI2cColorRangeSensor.getNormalizedColors.\n\n* Added example op modes for digital touch sensor and REV Robotics Color Distance sensor.\n* User selectable color themes.\n* Includes many minor enhancements and fixes (too numerous to list).\n\nKnown issues:\n* Auto complete function is incomplete and does not support the following (for now):\n     - Access via *this* keyword\n     - Access via *super* keyword\n     - Members of the super cloass, not overridden by the class\n     - Any methods provided in the current class\n     - Inner classes\n     - Can't handle casted objects\n     - Any objects coming from an parenthetically enclosed expression\n\n## Version 3.10 (built on 17.05.09)\n\nThis version of the software provides support for the REV Robotics Expansion Hub.  This version also includes improvements in the USB communication layer in an effort to enhance system resiliency.  If you were using a 2.x version of the software previously, updating to version 3.1 requires that you also update your Driver Station software in addition to updating the Robot Controller software.\n\nAlso note that in version 3.10 software, the setMaxSpeed and getMaxSpeed methods are no longer available (not deprecated, they have been removed from the SDK). Also note that the the new 3.x software incorporates motor profiles that a user can select as he/she configures the robot.\n\nChanges include:\n * Blocks changes\n    - Added VuforiaTrackableDefaultListener.getPose and Vuforia.trackPose blocks.\n    - Added optimized blocks support for Vuforia extended tracking.\n    - Added atan2 block to the math category.\n    - Added useCompetitionFieldTargetLocations parameter to Vuforia.initialize block.  If set to false, the target locations are placed at (0,0,0) with target orientation as specified in https://github.com/gearsincorg/FTCVuforiaDemo/blob/master/Robot_Navigation.java tutorial op mode.\n * Incorporates additional improvements to USB comm layer to improve system resiliency (to recover from a greater number of communication disruptions).\n\n**************************************************************************************\n\nAdditional Notes Regarding Version 3.00 (built on 17.04.13)\n\nIn addition to the release changes listed below (see section labeled \"Version 3.00 (built on 17.04.013)\"), version 3.00 has the following important changes:\n\n1. Version 3.00 software uses a new version of the FTC Robocol (robot protocol).  If you upgrade to v3.0 on the Robot Controller and/or Android Studio side, you must also upgrade the Driver Station software to match the new Robocol.\n2. Version 3.00 software removes the setMaxSpeed and getMaxSpeed methods from the DcMotor class.  If you have an op mode that formerly used these methods, you will need to remove the references/calls to these methods.  Instead, v3.0 provides the max speed information through the use of motor profiles that are selected by the user during robot configuration.\n3. Version 3.00 software currently does not have a mechanism to disable extra i2c sensors.  We hope to re-introduce this function with a release in the near future.\n\n**************************************************************************************\n\n## Version 3.00 (built on 17.04.13)\n\n*** Use this version of the software at YOUR OWN RISK!!! ***\n\nThis software is being released as an \"alpha\" version.  Use this version at your own risk!\n\nThis pre-release software contains SIGNIFICANT changes, including changes to the Wi-Fi Direct pairing mechanism, rewrites of the I2C sensor classes, changes to the USB/FTDI layer, and the introduction of support for the REV Robotics Expansion Hub and the REV Robotics color-range-light sensor.  These changes were implemented to improve the reliability and resiliency of the FTC control system.\n\nPlease note, however, that version 3.00 is considered \"alpha\" code.  This code is being released so that the FIRST community will have an opportunity to test the new REV Expansion Hub electronics module when it becomes available in May.  The developers do not recommend using this code for critical applications (i.e., competition use).\n\n*** Use this version of the software at YOUR OWN RISK!!! ***\n\nChanges include:\n * Major rework of sensor-related infrastructure.  Includes rewriting sensor classes to implement synchronous I2C communication.\n * Fix to reset Autonomous timer back to 30 seconds.\n * Implementation of specific motor profiles for approved 12V motors (includes Tetrix, AndyMark, Matrix and REV models).\n * Modest improvements to enhance Wi-Fi P2P pairing.\n * Fixes telemetry log addition race.\n * Publishes all the sources (not just a select few).\n * Includes Block programming improvements\n    - Addition of optimized Vuforia blocks.\n    - Auto scrollbar to projects and sounds pages.\n    - Fixed blocks paste bug.\n    - Blocks execute after while-opModeIsActive loop (to allow for cleanup before exiting op mode).\n    - Added gyro integratedZValue block.\n    - Fixes bug with projects page for Firefox browser.\n    - Added IsSpeaking block to AndroidTextToSpeech.\n * Implements support for the REV Robotics Expansion Hub\n    - Implements support for integral REV IMU (physically installed on I2C bus 0, uses same Bosch BNO055 9 axis absolute orientation sensor as Adafruit 9DOF abs orientation sensor).    - Implements support for REV color/range/light sensor.\n    - Provides support to update Expansion Hub firmware through FTC SDK.\n    - Detects REV firmware version and records in log file.\n    - Includes support for REV Control Hub (note that the REV Control Hub is not yet approved for FTC use).\n    - Implements FTC Blocks programming support for REV Expansion Hub and sensor hardware.\n    - Detects and alerts when I2C device disconnect.\n\n## Version 2.62 (built on 17.01.07)\n  * Added null pointer check before calling modeToByte() in finishModeSwitchIfNecessary method for ModernRoboticsUsbDcMotorController class.\n  * Changes to enhance Modern Robotics USB protocol robustness.\n\n## Version 2.61 (released on 16.12.19)\n  * Blocks Programming mode changes:\n     - Fix to correct issue when an exception was thrown because an OpticalDistanceSensor object appears twice in the hardware map (the second time as a LightSensor).\n\n## Version 2.6 (released on 16.12.16)\n  * Fixes for Gyro class:\n     - Improve (decrease) sensor refresh latency.\n     - fix isCalibrating issues.\n  * Blocks Programming mode changes:\n     - Blocks now ignores a device in the configuration xml if the name is empty. Other devices work in configuration work fine.\n\n## Version 2.5 (internal release on released on 16.12.13)\n  * Blocks Programming mode changes:\n     - Added blocks support for AdafruitBNO055IMU.\n     - Added Download Op Mode button to FtcBocks.html.\n     - Added support for copying blocks in one OpMode and pasting them in an other OpMode. The clipboard content is stored on the phone, so the programming mode server must be running.\n     - Modified Utilities section of the toolbox.\n     - In Programming Mode, display information about the active connections.\n     - Fixed paste location when workspace has been scrolled.\n     - Added blocks support for the android Accelerometer.\n     - Fixed issue where Blocks Upload Op Mode truncated name at first dot.\n     - Added blocks support for Android SoundPool.\n     - Added type safety to blocks for Acceleration.\n     - Added type safety to blocks for AdafruitBNO055IMU.Parameters.\n     - Added type safety to blocks for AnalogInput.\n     - Added type safety to blocks for AngularVelocity.\n     - Added type safety to blocks for Color.\n     - Added type safety to blocks for ColorSensor.\n     - Added type safety to blocks for CompassSensor.\n     - Added type safety to blocks for CRServo.\n     - Added type safety to blocks for DigitalChannel.\n     - Added type safety to blocks for ElapsedTime.\n     - Added type safety to blocks for Gamepad.\n     - Added type safety to blocks for GyroSensor.\n     - Added type safety to blocks for IrSeekerSensor.\n     - Added type safety to blocks for LED.\n     - Added type safety to blocks for LightSensor.\n     - Added type safety to blocks for LinearOpMode.\n     - Added type safety to blocks for MagneticFlux.\n     - Added type safety to blocks for MatrixF.\n     - Added type safety to blocks for MrI2cCompassSensor.\n     - Added type safety to blocks for MrI2cRangeSensor.\n     - Added type safety to blocks for OpticalDistanceSensor.\n     - Added type safety to blocks for Orientation.\n     - Added type safety to blocks for Position.\n     - Added type safety to blocks for Quaternion.\n     - Added type safety to blocks for Servo.\n     - Added type safety to blocks for ServoController.\n     - Added type safety to blocks for Telemetry.\n     - Added type safety to blocks for Temperature.\n     - Added type safety to blocks for TouchSensor.\n     - Added type safety to blocks for UltrasonicSensor.\n     - Added type safety to blocks for VectorF.\n     - Added type safety to blocks for Velocity.\n     - Added type safety to blocks for VoltageSensor.\n     - Added type safety to blocks for VuforiaLocalizer.Parameters.\n     - Added type safety to blocks for VuforiaTrackable.\n     - Added type safety to blocks for VuforiaTrackables.\n     - Added type safety to blocks for enums in AdafruitBNO055IMU.Parameters.\n     - Added type safety to blocks for AndroidAccelerometer, AndroidGyroscope, AndroidOrientation, and AndroidTextToSpeech.\n\n## Version 2.4 (released on 16.11.13)\n  * Fix to avoid crashing for nonexistent resources.\n  * Blocks Programming mode changes:\n     - Added blocks to support OpenGLMatrix, MatrixF, and VectorF.\n     - Added blocks to support AngleUnit, AxesOrder, AxesReference, CameraDirection, CameraMonitorFeedback, DistanceUnit, and TempUnit.\n     - Added blocks to support Acceleration.\n     - Added blocks to support LinearOpMode.getRuntime.\n     - Added blocks to support MagneticFlux and Position.\n     - Fixed typos.\n     - Made blocks for ElapsedTime more consistent with other objects.\n     - Added blocks to support Quaternion, Velocity, Orientation, AngularVelocity.\n     - Added blocks to support VuforiaTrackables, VuforiaTrackable, VuforiaLocalizer, VuforiaTrackableDefaultListener.\n     - Fixed a few blocks.\n     - Added type checking to new blocks.\n     - Updated to latest blockly.\n     - Added default variable blocks to navigation and matrix blocks.\n     - Fixed toolbox entry for openGLMatrix_rotation_withAxesArgs.\n     - When user downloads Blocks-generated op mode, only the .blk file is downloaded.\n     - When user uploads Blocks-generated op mode (.blk file), Javascript code is auto generated.\n     - Added DbgLog support.\n     - Added logging when a blocks file is read/written.\n     - Fixed bug to properly render blocks even if missing devices from configuration file.\n     - Added support for additional characters (not just alphanumeric) for the block file names (for download and upload).\n     - Added support for OpMode flavor (\"Autonomous\" or \"TeleOp\") and group.\n  * Changes to Samples to prevent tutorial issues.\n  * Incorporated suggested changes from public pull 216 ( Replace .. paths ).\n  * Remove Servo Glitches when robot stopped.\n  * if user hits  Cancels  when editing a configuration file, clears the unsaved changes and reverts to original unmodified configuration.\n  * Added log info to help diagnose why the Robot Controller app was terminated (for example, by watch dog function).\n  * Added ability to transfer log from the controller.\n  * Fixed inconsistency for AngularVelocity\n  * Limit unbounded growth of data for telemetry.  If user does not call telemetry.update() for LinearOpMode in a timely manner, data added for telemetry might get lost if size limit is exceeded.\n\n## Version 2.35 (released on 16.10.06)\n  * Blockly programming mode - Removed unnecesary idle() call from blocks for new project.\n\n## Version 2.30 (released on 16.10.05)\n  * Blockly programming mode:\n     - Mechanism added to save Blockly op modes from Programming Mode Server onto local device\n     - To avoid clutter, blocks are displayed in categorized folders\n     - Added support for DigitalChannel\n     - Added support for ModernRoboticsI2cCompassSensor\n     - Added support for ModernRoboticsI2cRangeSensor\n     - Added support for VoltageSensor\n     - Added support for AnalogInput\n     - Added support for AnalogOutput\n     - Fix for CompassSensor setMode block\n  * Vuforia\n     - Fix deadlock / make camera data available while Vuforia is running.\n     - Update to Vuforia 6.0.117 (recommended by Vuforia and Google to close security loophole).\n  * Fix for autonomous 30 second timer bug (where timer was in effect, even though it appeared to have timed out).\n  * opModeIsActive changes to allow cleanup after op mode is stopped (with enforced 2 second safety timeout).\n  * Fix to avoid reading i2c twice.\n  * Updated sample Op Modes.\n  * Improved logging and fixed intermittent freezing.\n  * Added digital I/O sample.\n  * Cleaned up device names in sample op modes to be consistent with Pushbot guide.\n  * Fix to allow use of IrSeekerSensorV3.\n\n## Version 2.20 (released on 16.09.08)\n  * Support for Modern Robotics Compass Sensor.\n  * Support for Modern Robotics Range Sensor.\n  * Revise device names for Pushbot templates to match the names used in Pushbot guide.\n  * Fixed bug so that IrSeekerSensorV3 device is accessible as IrSeekerSensor in hardwareMap.\n  * Modified computer vision code to require an individual Vuforia license (per legal requirement from PTC).\n  * Minor fixes.\n  * Blockly enhancements:\n     - Support for Voltage Sensor.\n     - Support for Analog Input.\n     - Support for Analog Output.\n     - Support for Light Sensor.\n     - Support for Servo Controller.\n\n## Version 2.10 (released on 16.09.03)\n * Support for Adafruit IMU.\n * Improvements to ModernRoboticsI2cGyro class\n    - Block on reset of z axis.\n    - isCalibrating() returns true while gyro is calibration.\n * Updated sample gyro program.\n * Blockly enhancements\n    - support for android.graphics.Color.\n    - added support for ElapsedTime.\n    - improved look and legibility of blocks.\n    - support for compass sensor.\n    - support for ultrasonic sensor.\n    - support for IrSeeker.\n    - support for LED.\n    - support for color sensor.\n    - support for CRServo\n    - prompt user to configure robot before using programming mode.\n * Provides ability to disable audio cues.\n * various bug fixes and improvements.\n\n## Version 2.00 (released on 16.08.19)\n * This is the new release for the upcoming 2016-2017 FIRST Tech Challenge Season.\n * Channel change is enabled in the FTC Robot Controller app for Moto G 2nd and 3rd Gen phones.\n * Users can now use annotations to register/disable their Op Modes.\n * Changes in the Android SDK, JDK and build tool requirements (minsdk=19, java 1.7, build tools 23.0.3).\n * Standardized units in analog input.\n * Cleaned up code for existing analog sensor classes.\n * setChannelMode and getChannelMode were REMOVED from the DcMotorController class.  This is important - we no longer set the motor modes through the motor controller.\n * setMode and getMode were added to the DcMotor class.\n * ContinuousRotationServo class has been added to the FTC SDK.\n * Range.clip() method has been overloaded so it can support this operation for int, short and byte integers.\n * Some changes have been made (new methods added) on how a user can access items from the hardware map.\n * Users can now set the zero power behavior for a DC motor so that the motor will brake or float when power is zero.\n * Prototype Blockly Programming Mode has been added to FTC Robot Controller.  Users can place the Robot Controller into this mode, and then use a device (such as a laptop) that has a Javascript enabled browser to write Blockly-based Op Modes directly onto the Robot Controller.\n * Users can now configure the robot remotely through the FTC Driver Station app.\n * Android Studio project supports Android Studio 2.1.x and compile SDK Version 23 (Marshmallow).\n * Vuforia Computer Vision SDK integrated into FTC SDK.  Users can use sample vision targets to get localization information on a standard FTC field.\n * Project structure has been reorganized so that there is now a TeamCode package that users can use to place their local/custom Op Modes into this package.\n * Inspection function has been integrated into the FTC Robot Controller and Driver Station Apps (Thanks Team HazMat  9277 & 10650!).\n * Audio cues have been incorporated into FTC SDK.\n * Swap mechanism added to FTC Robot Controller configuration activity.  For example, if you have two motor controllers on a robot, and you misidentified them in your configuration file, you can use the Swap button to swap the devices within the configuration file (so you do not have to manually re-enter in the configuration info for the two devices).\n * Fix mechanism added to all user to replace an electronic module easily.  For example, suppose a servo controller dies on your robot. You replace the broken module with a new module, which has a different serial number from the original servo controller.  You can use the Fix button to automatically reconfigure your configuration file to use the serial number of the new module.\n * Improvements made to fix resiliency and responsiveness of the system.\n * For LinearOpMode the user now must for a telemetry.update() to update the telemetry data on the driver station.  This update() mechanism ensures that the driver station gets the updated data properly and at the same time.\n * The Auto Configure function of the Robot Controller is now template based.  If there is a commonly used robot configuration, a template can be created so that the Auto Configure mechanism can be used to quickly configure a robot of this type.\n * The logic to detect a runaway op mode (both in the LinearOpMode and OpMode types) and to abort the run, then auto recover has been improved/implemented.\n * Fix has been incorporated so that Logitech F310 gamepad mappings will be correct for Marshmallow users.\n\n## Release 16.07.08\n\n * For the ftc_app project, the gradle files have been modified to support Android Studio 2.1.x.\n\n## Release 16.03.30\n\n * For the MIT App Inventor, the design blocks have new icons that better represent the function of each design component.\n * Some changes were made to the shutdown logic to ensure the robust shutdown of some of our USB services.\n * A change was made to LinearOpMode so as to allow a given instance to be executed more than once, which is required for the App Inventor.\n * Javadoc improved/updated.\n\n## Release 16.03.09\n\n * Changes made to make the FTC SDK synchronous (significant change!)\n    - waitOneFullHardwareCycle() and waitForNextHardwareCycle() are no longer needed and have been deprecated.\n    - runOpMode() (for a LinearOpMode) is now decoupled from the system's hardware read/write thread.\n    - loop() (for an OpMode) is now decoupled from the system's hardware read/write thread.\n    - Methods are synchronous.\n    - For example, if you call setMode(DcMotorController.RunMode.RESET_ENCODERS) for a motor, the encoder is guaranteed to be reset when the method call is complete.\n    - For legacy module (NXT compatible), user no longer has to toggle between read and write modes when reading from or writing to a legacy device.\n * Changes made to enhance reliability/robustness during ESD event.\n * Changes made to make code thread safe.\n * Debug keystore added so that user-generated robot controller APKs will all use the same signed key (to avoid conflicts if a team has multiple developer laptops for example).\n * Firmware version information for Modern Robotics modules are now logged.\n * Changes made to improve USB comm reliability and robustness.\n * Added support for voltage indicator for legacy (NXT-compatible) motor controllers.\n * Changes made to provide auto stop capabilities for op modes.\n    - A LinearOpMode class will stop when the statements in runOpMode() are complete.  User does not have to push the stop button on the driver station.\n    - If an op mode is stopped by the driver station, but there is a run away/uninterruptible thread persisting, the app will log an error message then force itself to crash to stop the runaway thread.\n * Driver Station UI modified to display lowest measured voltage below current voltage (12V battery).\n * Driver Station UI modified to have color background for current voltage (green=good, yellow=caution, red=danger, extremely low voltage).\n * javadoc improved (edits and additional classes).\n * Added app build time to About activity for driver station and robot controller apps.\n * Display local IP addresses on Driver Station About activity.\n * Added I2cDeviceSynchImpl.\n * Added I2cDeviceSync interface.\n * Added seconds() and milliseconds() to ElapsedTime for clarity.\n * Added getCallbackCount() to I2cDevice.\n * Added missing clearI2cPortActionFlag.\n * Added code to create log messages while waiting for LinearOpMode shutdown.\n * Fix so Wifi Direct Config activity will no longer launch multiple times.\n * Added the ability to specify an alternate i2c address in software for the Modern Robotics gyro.\n\n## Release 16.02.09\n\n * Improved battery checker feature so that voltage values get refreshed regularly (every 250 msec) on Driver Station (DS) user interface.\n * Improved software so that Robot Controller (RC) is much more resilient and  self-healing  to USB disconnects:\n    - If user attempts to start/restart RC with one or more module missing, it will display a warning but still start up.\n    - When running an op mode, if one or more modules gets disconnected, the RC & DS will display warnings,and robot will keep on working in spite of the missing module(s).\n    - If a disconnected module gets physically reconnected the RC will auto detect the module and the user will regain control of the recently connected module.\n    - Warning messages are more helpful (identifies the type of module that s missing plus its USB serial number).\n * Code changes to fix the null gamepad reference when users try to reference the gamepads in the init() portion of their op mode.\n * NXT light sensor output is now properly scaled.  Note that teams might have to readjust their light threshold values in their op modes.\n * On DS user interface, gamepad icon for a driver will disappear if the matching gamepad is disconnected or if that gamepad gets designated as a different driver.\n * Robot Protocol (ROBOCOL) version number info is displayed in About screen on RC and DS apps.\n * Incorporated a display filter on pairing screen to filter out devices that don t use the  <TEAM NUMBER>-  format. This filter can be turned off to show all WiFi Direct devices.\n * Updated text in License file.\n * Fixed formatting error in OpticalDistanceSensor.toString().\n * Fixed issue on with a blank (  ) device name that would disrupt WiFi Direct Pairing.\n * Made a change so that the WiFi info and battery info can be displayed more quickly on the DS upon connecting to RC.\n * Improved javadoc generation.\n * Modified code to make it easier to support language localization in the future.\n\n## Release 16.01.04\n\n * Updated compileSdkVersion for apps\n * Prevent Wifi from entering power saving mode\n * removed unused import from driver station\n * Corrrected \"Dead zone\" joystick code.\n * LED.getDeviceName and .getConnectionInfo() return null\n * apps check for ROBOCOL_VERSION mismatch\n * Fix for Telemetry also has off-by-one errors in its data string sizing / short size limitations error\n * User telemetry output is sorted.\n * added formatting variants to DbgLog and RobotLog APIs\n * code modified to allow for a long list of op mode names.\n * changes to improve thread safety of RobocolDatagramSocket\n * Fix for \"missing hardware leaves robot controller disconnected from driver station\" error\n * fix for \"fast tapping of Init/Start causes problems\" (toast is now only instantiated on UI thread).\n * added some log statements for thread life cycle.\n * moved gamepad reset logic inside of initActiveOpMode() for robustness\n * changes made to mitigate risk of race conditions on public methods.\n * changes to try and flag when WiFi Direct name contains non-printable characters.\n * fix to correct race condition between .run() and .close() in ReadWriteRunnableStandard.\n * updated FTDI driver\n * made ReadWriteRunnableStanard interface public.\n * fixed off-by-one errors in Command constructor\n * moved specific hardware implmentations into their own package.\n * moved specific gamepad implemnatations to the hardware library.\n * changed LICENSE file to new BSD version.\n * fixed race condition when shutting down Modern Robotics USB devices.\n * methods in the ColorSensor classes have been synchronized.\n * corrected isBusy() status to reflect end of motion.\n * corrected \"back\" button keycode.\n * the notSupported() method of the GyroSensor class was changed to protected (it should not be public).\n\n## Release 15.11.04.001\n\n * Added Support for Modern Robotics Gyro.\n  - The GyroSensor class now supports the MR Gyro Sensor.\n  - Users can access heading data (about Z axis)\n  - Users can also access raw gyro data (X, Y, & Z axes).\n  - Example MRGyroTest.java op mode included.\n * Improved error messages\n  - More descriptive error messages for exceptions in user code.\n * Updated DcMotor API\n * Enable read mode on new address in setI2cAddress\n * Fix so that driver station app resets the gamepads when switching op modes.\n * USB-related code changes to make USB comm more responsive and to display more explicit error messages.\n  - Fix so that USB will recover properly if the USB bus returns garbage data.\n  - Fix USB initializtion race condition.\n  - Better error reporting during FTDI open.\n  - More explicit messages during USB failures.\n  - Fixed bug so that USB device is closed if event loop teardown method was not called.\n * Fixed timer UI issue\n * Fixed duplicate name UI bug (Legacy Module configuration).\n * Fixed race condition in EventLoopManager.\n * Fix to keep references stable when updating gamepad.\n * For legacy Matrix motor/servo controllers removed necessity of appending \"Motor\" and \"Servo\" to controller names.\n * Updated HT color sensor driver to use constants from ModernRoboticsUsbLegacyModule class.\n * Updated MR color sensor driver to use constants from ModernRoboticsUsbDeviceInterfaceModule class.\n * Correctly handle I2C Address change in all color sensors\n * Updated/cleaned up op modes.\n  - Updated comments in LinearI2cAddressChange.java example op mode.\n  - Replaced the calls to \"setChannelMode\" with \"setMode\" (to match the new of the DcMotor  method).\n  - Removed K9AutoTime.java op mode.\n  - Added MRGyroTest.java op mode (demonstrates how to use MR Gyro Sensor).\n  - Added MRRGBExample.java op mode (demonstrates how to use MR Color Sensor).\n  - Added HTRGBExample.java op mode (demonstrates how to use HT legacy color sensor).\n  - Added MatrixControllerDemo.java (demonstrates how to use legacy Matrix controller).\n * Updated javadoc documentation.\n * Updated release .apk files for Robot Controller and Driver Station apps.\n\n## Release 15.10.06.002\n\n * Added support for Legacy Matrix 9.6V motor/servo controller.\n * Cleaned up build.gradle file.\n * Minor UI and bug fixes for driver station and robot controller apps.\n * Throws error if Ultrasonic sensor (NXT) is not configured for legacy module port 4 or 5.\n\n\n## Release 15.08.03.001\n\n * New user interfaces for FTC Driver Station and FTC Robot Controller apps.\n * An init() method is added to the OpMode class.\n   - For this release, init() is triggered right before the start() method.\n   - Eventually, the init() method will be triggered when the user presses an \"INIT\" button on driver station.\n   - The init() and loop() methods are now required (i.e., need to be overridden in the user's op mode).\n   - The start() and stop() methods are optional.\n * A new LinearOpMode class is introduced.\n   - Teams can use the LinearOpMode mode to create a linear (not event driven) program model.\n   - Teams can use blocking statements like Thread.sleep() within a linear op mode.\n * The API for the Legacy Module and Core Device Interface Module have been updated.\n   - Support for encoders with the Legacy Module is now working.\n * The hardware loop has been updated for better performance.",
      "sha256":"11bed05b5a46df1f31549ed33dfa40d883c7e1eaf813841c48a7e5236c7a5f3f",
      "url":"https://github.com/FIRST-Tech-Challenge/FtcRobotController/releases/download/v6.0/FtcDriverStation-release.apk",
      "versionCode":38,
      "versionString":"6.0"
    }, {
      "expectedFileSizeMiB":39.2,
      "permanentSoftwareName":"robot-controller-app",
      "releaseDate":"2020-12-16T22:56:27.773Z",
      "releaseNotes":"## Version 6.1 (20201209-113742)\n\n* Makes the scan button on the configuration screen update the list of Expansion Hubs connected via RS-485\n    * Fixes [SkyStone issue #143](https://github.com/FIRST-Tech-Challenge/SkyStone/issues/143)\n* Improves web interface compatibility with older browser and Android System WebView versions.\n* Fixes issue in UVC driver where some cameras (e.g. certain MS Lifecams) which reported frame intervals as rounded rather than truncated values (e.g. `666667*100ns` instead of `666666*100ns` for 15FPS) would fail to start streaming.\n* Adds support in UVC driver for virtual PTZ control\n* Adds support in UVC driver for gain (ISO) control\n* Adds support in UVC driver for enabling/disable AE priority. This setting provides a means to tell the camera firmware either\n    * A) It can undershoot the requested frame rate in order to provide a theoretically better image (i.e. with a longer exposure than the inter-frame period of the selected frame rate allows)\n    * B) It *must* meet the inter-frame deadline for the selected frame rate, even if the image may be underexposed as a result\n* Adds support for the Control Hub OS 1.1.2 Robot Controller watchdog\n    * The Robot Controller app will be restarted if it stops responding for more than 10 seconds\n* Adds support for using the Driver Station app on Android 10+\n* Introduces an automatic TeleOp preselection feature\n    * For details and usage guide, please see [this wiki entry](https://github.com/FIRST-Tech-Challenge/FtcRobotController/wiki/Automatically-Loading-a-Driver-Controlled-Op-Mode)\n* Shows icon next to OpMode name in the OpMode list dropdown on the Driver Station to indicate the source of the OpMode (i.e. the programming tool used to create it)\n* Fixes issue where the Driver Station app would exit after displaying the Configuring WiFi Direct screen\n* Fixes Blocks and OnBotJava prompts when accessed via the REV Hardware Client",
      "sha256":"0CFD0B789DDC6D1B282CFC550E39B0A70EEDF79B9AB42C762954C53D7076D3C9",
      "url":"https://github.com/FIRST-Tech-Challenge/FtcRobotController/releases/download/v6.1/FtcRobotController-release.apk",
      "versionCode":39,
      "versionString":"6.1"
    }, {
      "expectedFileSizeMiB":39.3,
      "permanentSoftwareName":"robot-controller-app",
      "releaseDate":"2020-12-16T22:56:27.773Z",
      "releaseNotes":"## Version 6.0 (20200921-085816)\n\n### Important Notes\n* Version 6.0 is the minimum legal version for the Ultimate Goal season.\n* Version 5.5 was a moderately large off-season, August 2020, drop.  It's worth reviewing those release notes below also.\n* Version 5.5 and greater will not work on older Android 4.x and 5.x phones.  Users must upgrade to an approved Android 6.x device or newer.\n* The default PIDF values for REV motors have been reverted to the default PID values that were used in the 2018-2019 season\n    * This change was made because the 2018-2019 values turned out to work better for many mechanisms\n    * This brings the behavior of the REV motors in line with the behavior of all other motors\n    * If you prefer the 2019-2020 season's behavior for REV motors, here are the PIDF values that were in place, so that you can manually set them in your OpModes:  \n      <br>\n      **HD Hex motors (all gearboxes):**  \n      Velocity PIDF values: `P = 1.17`, `I = 0.117`, `F = 11.7`  \n      Position PIDF values: `P = 5.0`  \n      **Core Hex motor:**  \n      Velocity PIDF values: `P = 4.96`, `I = 0.496`, `F = 49.6`  \n      Position PIDF values: `P = 5.0`\n\n### New features\n* Includes TensorFlow inference model and sample op modes to detect Ultimate Goal Starter Stacks (four rings vs single ring stack).\n* Includes Vuforia Ultimate Goal vision targets and sample op modes.\n* Introduces a digital zoom feature for TensorFlow object detection (to detect objects more accurately at greater distances).\n* Adds configuration entry for the REV UltraPlanetary HD Hex motor\n\n### Enhancements\n* Adds setGain() and getGain() methods to the NormalizedColorSensor interface\n    * By setting the gain of a color sensor, you can adjust for different lighting conditions.\n      For example, if you detect lower color values than expected, you can increase the gain.\n    * The gain value is only applied to the argb() and getNormalizedColors() methods, not to the raw color methods.\n      The getNormalizedColors() method is recommended for ease-of-use and clarity, since argb() has to be converted.\n    * Updates SensorColor Java sample to demonstrate gain usage\n* Merges SensorREVColorDistance Java sample into SensorColor Java sample, which showcases best practices for all color sensors\n* Improves retrieving values from the REV Color Sensor V3\n    * Updates the normalization calculation of the RGB channels\n    * Improves the calculation of the alpha channel (can be used as an overall brightness indicator)\n    * Fixes the default sensor resolution, which caused issues with bright environments\n    * Adds support for changing the resolution and measuring rate of the Broadcom sensor chip\n    * Removes IR readings and calculations not meant for the Broadcom sensor chip\n\n### Bug fixes\n* Improved reliability of BNO055IMU IMU initialization to prevent random initialization failures (which manifested as `Problem with 'imu'`).\n\n## Version 5.5 (20200824-090813)\n\n### New features\n* Adds support for calling custom Java classes from Blocks OpModes (fixes [SkyStone issue #161](https://github.com/FIRST-Tech-Challenge/SkyStone/issues/161)).\n    * Classes must be in the org.firstinspires.ftc.teamcode package.\n    * Methods must be public static and have no more than 21 parameters.\n    * Parameters declared as OpMode, LinearOpMode, Telemetry, and HardwareMap are supported and the\n      argument is provided automatically, regardless of the order of the parameters. On the block,\n      the sockets for those parameters are automatically filled in.\n    * Parameters declared as char or java.lang.Character will accept any block that returns text\n      and will only use the first character in the text.\n    * Parameters declared as boolean or java.lang.Boolean will accept any block that returns boolean.\n    * Parameters declared as byte, java.lang.Byte, short, java.lang.Short, int, java.lang.Integer,\n      long, or java.lang.Long,  will accept any block that returns a number and will round that\n      value to the nearest whole number.\n    * Parameters declared as float, java.lang.Float, double, java.lang.Double will accept any\n      block that returns a number.\n* Adds telemetry API method for setting display format\n    * Classic\n    * Monospace\n    * HTML (certain tags only)\n* Adds blocks support for switching cameras.\n* Adds Blocks support for TensorFlow Object Detection with a custom model.\n* Adds support for uploading a custom TensorFlow Object Detection model in the Manage page, which\n  is especially useful for Blocks and OnBotJava users.\n* Shows new Control Hub blink codes when the WiFi band is switched using the Control Hub's button (only possible on Control Hub OS 1.1.2)\n* Adds new warnings which can be disabled in the Advanced RC Settings\n    * Mismatched app versions warning\n    * Unnecessary 2.4 GHz WiFi usage warning\n    * REV Hub is running outdated firmware (older than version 1.8.2)\n* Adds support for Sony PS4 gamepad, and reworks how gamepads work on the Driver Station\n    * Removes preference which sets gamepad type based on driver position. Replaced with menu which allows specifying type for gamepads with unknown VID and PID\n    * Attempts to auto-detect gamepad type based on USB VID and PID\n    * If gamepad VID and PID is not known, use type specified by user for that VID and PID\n    * If gamepad VID and PID is not known AND the user has not specified a type for that VID and PID, an educated guess is made about how to map the gamepad\n* Driver Station will now attempt to automatically recover from a gamepad disconnecting, and re-assign it to the position it was assigned to when it dropped\n    * If only one gamepad is assigned and it drops: it can be recovered\n    * If two gamepads are assigned, and have **different** VID/PID signatures, and only one drops: it will be recovered\n    * If two gamepads are assigned, and have **different** VID/PID signatures, and BOTH drop: both will be recovered\n    * If two gamepads are assigned, and have **the same** VID/PID signatures, and only one drops: it will be recovered\n    * If two gamepads are assigned, and have **the same** VID/PID signatures, and BOTH drop: **neither** will be recovered, because of the ambiguity of the gamepads when they re-appear on the USB bus.\n    * There is currently one known edge case: if there are **two** gamepads with **the same** VID/PID signature plugged in, **but only one is assigned**, and they BOTH drop, it's a 50-50 chance of which one will be chosen for automatic recovery to the assigned position: it is determined by whichever one is re-enumerated first by the USB bus controller.\n* Adds landscape user interface to Driver Station\n    * New feature: practice timer with audio cues\n    * New feature (Control Hub only): wireless network connection strength indicator (0-5 bars)\n    * New feature (Control Hub only): tapping on the ping/channel display will switch to an alternate display showing radio RX dBm and link speed (tap again to switch back)\n    * The layout will NOT autorotate. You can switch the layout from the Driver Station's settings menu.\n\n\n### Breaking changes\n* Removes support for Android versions 4.4 through 5.1 (KitKat and Lollipop). The minSdkVersion is now 23.\n* Removes the deprecated `LinearOpMode` methods `waitOneFullHardwareCycle()` and `waitForNextHardwareCycle()`\n\n### Enhancements\n* Handles RS485 address of Control Hub automatically\n    * The Control Hub is automatically given a reserved address\n    * Existing configuration files will continue to work\n    * All addresses in the range of 1-10 are still available for Expansion Hubs\n    * The Control Hub light will now normally be solid green, without blinking to indicate the address\n    * The Control Hub will not be shown on the Expansion Hub Address Change settings page\n* Improves REV Hub firmware updater\n    * The user can now choose between all available firmware update files\n    * Version 1.8.2 of the REV Hub firmware is bundled into the Robot Controller app.\n    * Text was added to clarify that Expansion Hubs can only be updated via USB.\n    * Firmware update speed was reduced to improve reliability\n    * Allows REV Hub firmware to be updated directly from the Manage webpage\n* Improves log viewer on Robot Controller\n    * Horizontal scrolling support (no longer word wrapped)\n    * Supports pinch-to-zoom\n    * Uses a monospaced font\n    * Error messages are highlighted\n    * New color scheme\n* Attempts to force-stop a runaway/stuck OpMode without restarting the entire app\n    * Not all types of runaway conditions are stoppable, but if the user code attempts to talk to hardware during the runaway, the system should be able to capture it.\n* Makes various tweaks to the Self Inspect screen\n    * Renames \"OS version\" entry to \"Android version\"\n    * Renames \"WiFi Direct Name\" to \"WiFi Name\"\n    * Adds Control Hub OS version, when viewing the report of a Control Hub\n    * Hides the airplane mode entry, when viewing the report of a Control Hub\n    * Removes check for ZTE Speed Channel Changer\n    * Shows firmware version for **all** Expansion and Control Hubs\n* Reworks network settings portion of Manage page\n    * All network settings are now applied with a single click\n    * The WiFi Direct channel of phone-based Robot Controllers can now be changed from the Manage page\n    * WiFi channels are filtered by band (2.4 vs 5 GHz) and whether they overlap with other channels\n    * The current WiFi channel is pre-selected on phone-based Robot Controllers, and Control Hubs running OS 1.1.2 or later.\n    * On Control Hubs running OS 1.1.2 or later, you can choose to have the system automatically select a channel on the 5 GHz band\n* Improves OnBotJava\n    * New light and dark themes replace the old themes (chaos, github, chrome,...)\n        * the new default theme is `light` and will be used when you first update to this version\n    * OnBotJava now has a tabbed editor\n    * Read-only offline mode\n* Improves function of \"exit\" menu item on Robot Controller and Driver Station\n    * Now guaranteed to be fully stopped and unloaded from memory\n* Shows a warning message if a LinearOpMode exists prematurely due to failure to monitor for the start condition\n* Improves error message shown when the Driver Station and Robot Controller are incompatible with each other\n* Driver Station OpMode Control Panel now disabled while a Restart Robot is in progress\n* Disables advanced settings related to WiFi direct when the Robot Controller is a Control Hub.\n* Tint phone battery icons on Driver Station when low/critical.\n* Uses names \"Control Hub Portal\" and \"Control Hub\" (when appropriate) in new configuration files\n* Improve I2C read performance\n    * Very large improvement on Control Hub; up to ~2x faster with small (e.g. 6 byte) reads\n    * Not as apparent on Expansion Hubs connected to a phone\n* Update/refresh build infrastructure\n    * Update to 'androidx' support library from 'com.android.support:appcompat', which is end-of-life\n    * Update targetSdkVersion and compileSdkVersion to 28\n    * Update Android Studio's Android plugin to latest\n    * Fix reported build timestamp in 'About' screen\n* Add sample illustrating manual webcam use: ConceptWebcam\n\n\n### Bug fixes\n* Fixes [SkyStone issue #248](https://github.com/FIRST-Tech-Challenge/SkyStone/issues/248)\n* Fixes [SkyStone issue #232](https://github.com/FIRST-Tech-Challenge/SkyStone/issues/232) and\n  modifies bulk caching semantics to allow for cache-preserving MANUAL/AUTO transitions.\n* Improves performance when REV 2M distance sensor is unplugged\n* Improves readability of Toast messages on certain devices\n* Allows a Driver Station to connect to a Robot Controller after another has disconnected\n* Improves generation of fake serial numbers for UVC cameras which do not provide a real serial number\n    * Previously some devices would assign such cameras a serial of `0:0` and fail to open and start streaming\n    * Fixes [ftc_app issue #638](https://github.com/ftctechnh/ftc_app/issues/638).\n* Fixes a slew of bugs with the Vuforia camera monitor including:\n    * Fixes bug where preview could be displayed with a wonky aspect ratio\n    * Fixes bug where preview could be cut off in landscape\n    * Fixes bug where preview got totally messed up when rotating phone\n    * Fixes bug where crosshair could drift off target when using webcams\n* Fixes issue in UVC driver on some devices ([ftc_app 681](https://github.com/ftctechnh/ftc_app/issues/681)) if streaming was started/stopped multiple times in a row\n    * Issue manifested as kernel panic on devices which do not have [this kernel patch](https://lore.kernel.org/patchwork/patch/352400/).\n    * On affected devices which **do** have the patch, the issue was manifest as simply a failure to start streaming.\n    * The Tech Team believes that the root cause of the issue is a bug in the Linux kernel XHCI driver. A workaround was implemented in the SDK UVC driver.\n* Fixes bug in UVC driver where often half the frames from the camera would be dropped (e.g. only 15FPS delivered during a streaming session configured for 30FPS).\n* Fixes issue where TensorFlow Object Detection would show results whose confidence was lower than\n  the minimum confidence parameter.\n* Fixes a potential exploitation issue of [CVE-2019-11358](https://www.cvedetails.com/cve/CVE-2019-11358/) in OnBotJava\n* Fixes changing the address of an Expansion Hub with additional Expansion Hubs connected to it\n* Preserves the Control Hub's network connection when \"Restart Robot\" is selected\n* Fixes issue where device scans would fail while the Robot was restarting\n* Fix RenderScript usage\n    * Use androidx.renderscript variant: increased compatibility\n    * Use RenderScript in Java mode, not native: simplifies build\n* Fixes webcam-frame-to-bitmap conversion problem: alpha channel wasn't being initialized, only R, G, & B\n* Fixes possible arithmetic overflow in Deadline\n* Fixes deadlock in Vuforia webcam support which could cause 5-second delays when stopping OpMode\n\n## Version 5.4 (20200108-101156)\n* Fixes [SkyStone issue #88](https://github.com/FIRST-Tech-Challenge/SkyStone/issues/88)\n* Adds an inspection item that notes when a robot controller (Control Hub) is using the factory default password.\n* Fixes [SkyStone issue #61](https://github.com/FIRST-Tech-Challenge/SkyStone/issues/61)\n* Fixes [SkyStone issue #142](https://github.com/FIRST-Tech-Challenge/SkyStone/issues/142)\n* Fixes [ftc_app issue #417](https://github.com/ftctechnh/ftc_app/issues/417) by adding more current and voltage monitoring capabilities for REV Hubs.\n* Fixes [a crash sometimes caused by OnBotJava activity](https://ftcforum.firstinspires.org/forum/ftc-technology/76217-onbotjava-crashes-robot-controller)\n* Improves OnBotJava autosave functionality [ftc_app #738](https://github.com/ftctechnh/ftc_app/issues/738)\n* Fixes system responsiveness issue when an Expansion Hub is disconnected\n* Fixes issue where IMU initialization could prevent Op Modes from stopping\n* Fixes issue where AndroidTextToSpeech.speak() would fail if it was called too early\n* Adds telemetry.speak() methods and blocks, which cause the Driver Station (if also updated) to speak text\n* Adds and improves Expansion Hub-related warnings\n    * Improves Expansion Hub low battery warning\n        * Displays the warning immediately after the hub reports it\n        * Specifies whether the condition is current or occurred temporarily during an OpMode run\n        * Displays which hubs reported low battery\n    * Displays warning when hub loses and regains power during an OpMode run\n        * Fixes the hub's LED pattern after this condition\n    * Displays warning when Expansion Hub is not responding to commands\n        * Specifies whether the condition is current or occurred temporarily during an OpMode run\n    * Clarifies warning when Expansion Hub is not present at startup\n        * Specifies that this condition requires a Robot Restart before the hub can be used.\n        * The hub light will now accurately reflect this state\n    * Improves logging and reduces log spam during these conditions\n* Syncs the Control Hub time and timezone to a connected web browser programming the robot, if a Driver Station is not available.\n* Adds bulk read functionality for REV Hubs\n  * A bulk caching mode must be set at the Hub level with `LynxModule#setBulkCachingMode()`. This applies to all relevant SDK hardware classes that reference that Hub.\n  * The following following Hub bulk caching modes are available:\n    * `BulkCachingMode.OFF` (default): All hardware calls operate as usual. Bulk data can read through `LynxModule#getBulkData()` and processed manually.\n    * `BulkCachingMode.AUTO`: Applicable hardware calls are served from a bulk read cache that is cleared/refreshed automatically to ensure identical commands don't hit the same cache. The cache can also be cleared manually with `LynxModule#clearBulkCache()`, although this is not recommended.\n    * (advanced users) `BulkCachingMode.MANUAL`: Same as `BulkCachingMode.AUTO` except the cache is never cleared automatically. To avoid getting stale data, the cache must be manually cleared at the beginning of each loop body or as the user deems appropriate.\n* Removes PIDF Annotation values added in Rev 5.3 (to AndyMark, goBILDA and TETRIX motor configurations).\n  * The new motor types will still be available but their Default control behavior will revert back to Rev 5.2\n* Adds new `ConceptMotorBulkRead` sample Opmode to demonstrate and compare Motor Bulk-Read modes for reducing I/O latencies.\n\n## Version 5.3 (20191004-112306)\n* Fixes external USB/UVC webcam support\n* Makes various bugfixes and improvements to Blocks page, including but not limited to:\n    * Many visual tweaks\n    * Browser zoom and window resize behave better\n    * Resizing the Java preview pane works better and more consistently across browsers\n    * The Java preview pane consistently gets scrollbars when needed\n    * The Java preview pane is hidden by default on phones\n    * Internet Explorer 11 should work\n    * Large dropdown lists display properly on lower res screens\n    * Disabled buttons are now visually identifiable as disabled\n    * A warning is shown if a user selects a TFOD sample, but their device is not compatible\n    * Warning messages in a Blocks op mode are now visible by default.\n* Adds goBILDA 5201 and 5202 motors to Robot Configurator\n* Adds PIDF Annotation values to AndyMark, goBILDA and TETRIX motor configurations.\n    This has the effect of causing the RUN_USING_ENCODERS and RUN_TO_POSITION modes to use\n    PIDF vs PID closed loop control on these motors.  This should provide more responsive, yet stable, speed control.\n    PIDF adds Feedforward control to the basic PID control loop.\n    Feedforward is useful when controlling a motor's speed because it \"anticipates\" how much the control voltage\n    must change to achieve a new speed set-point, rather than requiring the integrated error to change sufficiently.\n    The PIDF values were chosen to provide responsive, yet stable, speed control on a lightly loaded motor.\n    The more heavily a motor is loaded (drag or friction), the more noticable the PIDF improvement will be.\n* Fixes startup crash on Android 10\n* Fixes [ftc_app issue #712](https://github.com/ftctechnh/ftc_app/issues/712) (thanks to FROGbots-4634)\n* Fixes [ftc_app issue #542](https://github.com/ftctechnh/ftc_app/issues/542)\n* Allows \"A\" and lowercase letters when naming device through RC and DS apps.\n\n## Version 5.2 (20190905-083277)\n* Fixes extra-wide margins on settings activities, and placement of the new configuration button\n* Adds Skystone Vuforia image target data.\n   * Includes sample Skystone Vuforia Navigation op modes (Java).\n   * Includes sample Skystone Vuforia Navigation op modes (Blocks).\n* Adds TensorFlow inference model (.tflite) for Skystone game elements.\n   * Includes sample Skystone TensorFlow op modes (Java).\n   * Includes sample Skystone TensorFlow op modes (Blocks).\n* Removes older (season-specific) sample op modes.\n* Includes 64-bit support (to comply with [Google Play requirements](https://android-developers.googleblog.com/2019/01/get-your-apps-ready-for-64-bit.html)).\n* Protects against Stuck OpModes when a Restart Robot is requested. (Thanks to FROGbots-4634) ([ftc_app issue #709](https://github.com/ftctechnh/ftc_app/issues/709))\n* Blocks related changes:\n   * Fixes bug with blocks generated code when hardware device name is a java or javascript reserved word.\n   * Shows generated java code for blocks, even when hardware items are missing from the active configuration.\n   * Displays warning icon when outdated Vuforia and TensorFlow blocks are used ([SkyStone issue #27](https://github.com/FIRST-Tech-Challenge/SkyStone/issues/27))\n\n## Version 5.1 (20190820-222104)\n* Defines default PIDF parameters for the following motors:\n    * REV Core Hex Motor\n    * REV 20:1 HD Hex Motor\n    * REV 40:1 HD Hex Motor\n* Adds back button when running on a device without a system back button (such as a Control Hub)\n* Allows a REV Control Hub to update the firmware on a REV Expansion Hub via USB\n* Fixes [SkyStone issue #9](https://github.com/FIRST-Tech-Challenge/SkyStone/issues/9)\n* Fixes [ftc_app issue #715](https://github.com/ftctechnh/ftc_app/issues/715)\n* Prevents extra DS User clicks by filtering based on current state.\n* Prevents incorrect DS UI state changes when receiving new OpMode list from RC\n* Adds support for REV Color Sensor V3\n* Adds a manual-refresh DS Camera Stream for remotely viewing RC camera frames.\n    * To show the stream on the DS, initialize **but do not run** a stream-enabled opmode, select the Camera Stream option in the DS menu, and tap the image to refresh. This feature is automatically enabled when using Vuforia or TFOD no additional RC configuration is required for typical use cases. To hide the stream, select the same menu item again.\n    * Note that gamepads are disabled and the selected opmode cannot be started while the stream is open as a safety precaution.\n    * To use custom streams, consult the API docs for `CameraStreamServer#setSource` and `CameraStreamSource`.\n* Adds many Star Wars sounds to RobotController resources.\n* Added Skystone Sounds Chooser Sample Program.\n* Switches out startup, connect chimes, and error/warning sounds for Star Wars sounds\n* Updates OnBot Java to use a WebSocket for communication with the robot\n    * The OnBot Java page no longer has to do a full refresh when a user switches from editing one file to another\n\nKnown issues:\n* Camera Stream\n    * The Vuforia camera stream inherits the issues present in the phone preview (namely [ftc_app issue #574](https://github.com/ftctechnh/ftc_app/issues/574)). This problem does not affect the TFOD camera stream even though it receives frames from Vuforia.\n    * The orientation of the stream frames may not always match the phone preview. For now, these frames may be rotated manually via a custom `CameraStreamSource` if desired.\n* OnBotJava\n    * Browser back button may not always work correctly\n    * It's possible for a build to be queued, but not started. The OnBot Java build console will display a warning if this occurs.\n    * A user might not realize they are editing a different file if the user inadvertently switches from one file to another since this switch is now seamless. The name of the currently open file is displayed in the browser tab.\n\n## Version 5.0 (built on 19.06.14)\n * Support for the REV Robotics Control Hub.\n * Adds a Java preview pane to the Blocks editor.\n * Adds a new offline export feature to the Blocks editor.\n * Display wifi channel in Network circle on Driver Station.\n * Adds calibration for Logitech C270\n * Updates build tooling and target SDK.\n * Compliance with Google's permissions infrastructure (Required after build tooling update).\n * Keep Alives to mitigate the Motorola wifi scanning problem.  Telemetry substitute no longer necessary.\n * Improves Vuforia error reporting.\n * Fixes ftctechnh/ftc_app issues 621, 713.\n * Miscellaneous bug fixes and improvements.\n\n## Version 4.3 (built on 18.10.31)\n * Includes missing TensorFlow-related libraries and files.\n\n## Version 4.2 (built on 18.10.30)\n * Includes fix to avoid deadlock situation with WatchdogMonitor which could result in USB communication errors.\n     - Comm error appeared to require that user disconnect USB cable and restart the Robot Controller app to recover.\n     - robotControllerLog.txt would have error messages that included the words \"E RobotCore: lynx xmit lock: #### abandoning lock:\"\n * Includes fix to correctly list the parent module address for a REV Robotics Expansion Hub in a configuration (.xml) file.\n     - Bug in versions 4.0 and 4.1 would incorrect list the address module for a parent REV Robotics device as \"1\".\n     - If the parent module had a higher address value than the daisy-chained module, then this bug would prevent the Robot Controller from communicating with the downstream Expansion Hub.\n * Added requirement for ACCESS_COARSE_LOCATION to allow a Driver Station running Android Oreo to scan for Wi-Fi Direct devices.\n * Added google() repo to build.gradle because aapt2 must be downloaded from the google() repository beginning with version 3.2 of the Android Gradle Plugin.\n     - Important Note: Android Studio users will need to be connected to the Internet the first time build the ftc_app project.\n     - Internet connectivity is required for the first build so the appropriate files can be downloaded from the Google repository.\n     - Users should not need to be connected to the Internet for subsequent builds.\n     - This should also fix buid issue where Android Studio would complain that it \"Could not find com.android.tools.lint:lint-gradle:26.1.4\" (or similar).\n * Added support for REV Spark Mini motor controller as part of the configuration menu for a servo/PWM port on the REV Expansion Hub.\n * Provide examples for playing audio files in an Op Mode.\n * Block Development Tool Changes\n     - Includes a fix for a problem with the Velocity blocks that were reported in the FTC Technology forum (Blocks Programming subforum).\n     - Change the \"Save completed successfully.\" message to a white color so it will contrast with a green background.\n     - Fixed the \"Download image\" feature so it will work if there are text blocks in the op mode.\n * Introduce support for Google's TensorFlow Lite technology for object detetion for 2018-2019 game.\n     - TensorFlow lite can recognize Gold Mineral and Silver Mineral from 2018-2019 game.\n     - Example Java and Block op modes are included to show how to determine the relative position of the gold block (left, center, right).\n\n## Version 4.1 (released on 18.09.24)\n\nChanges include:\n * Fix to prevent crash when deprecated configuration annotations are used.\n * Change to allow FTC Robot Controller APK to be auto-updated using FIRST Global Control Hub update scripts.\n * Removed samples for non supported / non legal hardware.\n * Improvements to Telemetry.addData block with \"text\" socket.\n * Updated Blocks sample op mode list to include Rover Ruckus Vuforia example.\n * Update SDK library version number.\n\n## Version 4.0 (released on 18.09.12)\n\nChanges include:\n * Initial support for UVC compatible cameras\n    - If UVC camera has a unique serial number, RC will detect and enumerate by serial number.\n    - If UVC camera lacks a unique serial number, RC will only support one camera of that type connected.\n    - Calibration settings for a few cameras are included (see TeamCode/src/main/res/xml/teamwebcamcalibrations.xml for details).\n    - User can upload calibration files from Program and Manage web interface.\n    - UVC cameras seem to draw a fair amount of electrical current from the USB bus.\n         + This does not appear to present any problems for the REV Robotics Control Hub.\n\t + This does seem to create stability problems when using some cameras with an Android phone-based Robot Controller.\n\t + FTC Tech Team is investigating options to mitigate this issue with the phone-based Robot Controllers.\n    - Updated sample Vuforia Navigation and VuMark Op Modes to demonstrate how to use an internal phone-based camera and an external UVC webcam.\n\n * Support for improved motor control.\n    - REV Robotics Expansion Hub firmware 1.8 and greater will support a feed forward mechanism for closed loop motor control.\n    - FTC SDK has been modified to support PIDF coefficients (proportional, integral, derivative, and feed forward).\n    - FTC Blocks development tool modified to include PIDF programming blocks.\n    - Deprecated older PID-related methods and variables.\n    - REV's 1.8.x PIDF-related changes provide a more linear and accurate way to control a motor.\n\n * Wireless\n    - Added 5GHz support for wireless channel changing for those devices that support it.\n        + Tested with Moto G5 and E4 phones.\n\t+ Also tested with other (currently non-approved) phones such as Samsung Galaxy S8.\n\n* Improved Expansion Hub firmware update support in Robot Controller app\n    - Changes to make the system more robust during the firmware update process (when performed through Robot Controller app).\n    - User no longer has to disconnect a downstream daisy-chained Expansion Hub when updating an Expansion Hub's firmware.\n        + If user is updating an Expansion Hub's firmware through a USB connection, he/she does not have to disconnect RS485 connection to other Expansion Hubs.\n\t+ The user still must use a USB connection to update an Expansion Hub's firmware.\n\t+ The user cannot update the Expansion Hub firmware for a downstream device that is daisy chained through an RS485 connection.\n    - If an Expansion Hub accidentally gets \"bricked\" the Robot Controller app is now more likely to recognize the Hub when it scans the USB bus.\n        + Robot Controller app should be able to detect an Expansion Hub, even if it accidentally was bricked in a previous update attempt.\n\t+ Robot Controller app should be able to install the firmware onto the Hub, even if if accidentally was bricked in a previous update attempt.\n\n * Resiliency\n    - FTC software can detect and enable an FTDI reset feature that is available with REV Robotics v1.8 Expansion Hub firmware and greater.\n        + When enabled, the Expansion Hub can detect if it hasn't communicated with the Robot Controller over the FTDI (USB) connection.\n\t+ If the Hub hasn't heard from the Robot Controller in a while, it will reset the FTDI connection.\n\t+ This action helps system recover from some ESD-induced disruptions.\n    - Various fixes to improve reliability of FTC software.\n\n * Blocks\n    - Fixed errors with string and list indices in blocks export to java.\n    - Support for USB connected UVC webcams.\n    - Refactored optimized Blocks Vuforia code to support Rover Ruckus image targets.\n    - Added programming blocks to support PIDF (proportional, integral, derivative and feed forward) motor control.\n    - Added formatting options (under Telemetry and Miscellaneous categories) so user can set how many decimal places to display a numerical value.\n    - Support to play audio files (which are uploaded through Blocks web interface) on Driver Station in addition to the Robot Controller.\n    - Fixed bug with Download Image of Blocks feature.\n    - Support for REV Robotics Blinkin LED Controller.\n    - Support for REV Robotics 2m Distance Sensor.\n    - Added support for a REV Touch Sensor (no longer have to configure as a generic digital device).\n    - Added blocks for DcMotorEx methods.\n        + These are enhanced methods that you can use when supported by the motor controller hardware.\n\t+ The REV Robotics Expansion Hub supports these enhanced methods.\n\t+ Enhanced methods include methods to get/set motor velocity (in encoder pulses per second), get/set PIDF coefficients, etc..\n\n * Modest Improvements in Logging\n    - Decrease frequency of battery checker voltage statements.\n    - Removed non-FTC related log statements (wherever possible).\n    - Introduced a \"Match Logging\" feature.\n        + Under \"Settings\" a user can enable/disable this feature (it's disabled by default).\n\t+ If enabled, user provides a \"Match Number\" through the Driver Station user interface (top of the screen).\n\t    * The Match Number is used to create a log file specifically with log statements from that particular Op Mode run.\n\t    * Match log files are stored in /sdcard/FIRST/matlogs on the Robot Controller.\n\t    * Once an op mode run is complete, the Match Number is cleared.\n\t    * This is a convenient way to create a separate match log with statements only related to a specific op mode run.\n\n * New Devices\n    - Support for REV Robotics Blinkin LED Controller.\n    - Support for REV Robotics 2m Distance Sensor.\n    - Added configuration option for REV 20:1 HD Hex Motor.\n    - Added support for a REV Touch Sensor (no longer have to configure as a generic digital device).\n\n * Miscellaneous\n    - Fixed some errors in the definitions for acceleration and velocity in our javadoc documentation.\n    - Added ability to play audio files on Driver Station\n    - When user is configuring an Expansion Hub, the LED on the Expansion Hub will change blink pattern (purple-cyan)  to indicate which Hub is currently being configured.\n    - Renamed I2cSensorType to I2cDeviceType.\n    - Added an external sample Op Mode that demonstrates localization using 2018-2019 (Rover Ruckus presented by QualComm) Vuforia targets.\n    - Added an external sample Op Mode that demonstrates how to use the REV Robotics 2m Laser Distance Sensor.\n    - Added an external sample Op Mode that demonstrates how to use the REV Robotics Blinkin LED Controller.\n    - Re-categorized external Java sample Op Modes to \"TeleOp\" instead of \"Autonomous\".\n\nKnown issues:\n * Initial support for UVC compatible cameras\n    - UVC cameras seem to draw significant amount of current from the USB bus.\n        + This does not appear to present any problems for the REV Robotics Control Hub.\n\t+ This does seem to create stability problems when using some cameras with an Android phone-based Robot Controller.\n\t+ FTC Tech Team is investigating options to mitigate this issue with the phone-based Robot Controllers.\n    - There might be a possible deadlock which causes the RC to become unresponsive when using a UVC webcam with a Nougat Android Robot Controller.\n\n * Wireless\n    - When user selects a wireless channel, this channel does not necessarily persist if the phone is power cycled.\n        + Tech Team is hoping to eventually address this issue in a future release.\n\t+ Issue has been present since apps were introduced (i.e., it is not new with the v4.0 release).\n    - Wireless channel is not currently displayed for WiFi Direct connections.\n\n * Miscellaneous\n    - The blink indication feature that shows which Expansion Hub is currently being configured does not work for a newly created configuration file.\n        + User has to first save a newly created configuration file and then close and re-edit the file in order for blink indicator to work.\n\n## Version 3.6 (built on 17.12.18)\n\nChanges include:\n * Blocks Changes\n     - Uses updated Google Blockly software to allow users to edit their op modes on Apple iOS devices (including iPad and iPhone).\n     - Improvement in Blocks tool to handle corrupt op mode files.\n     - Autonomous op modes should no longer get switched back to tele-op after re-opening them to be edited.\n     - The system can now detect type mismatches during runtime and alert the user with a message on the Driver Station.\n * Updated javadoc documentation for setPower() method to reflect correct range of values (-1 to +1).\n * Modified VuforiaLocalizerImpl to allow for user rendering of frames\n     - Added a user-overrideable onRenderFrame() method which gets called by the class's renderFrame() method.\n\n## Version 3.5 (built on 17.10.30)\n\nChanges with version 3.5 include:\n * Introduced a fix to prevent random op mode stops, which can occur after the Robot Controller app has been paused and then resumed (for example, when a user temporarily turns off the display of the Robot Controller phone, and then turns the screen back on).\n * Introduced a fix to prevent random op mode stops, which were previously caused by random peer disconnect events on the Driver Station.\n * Fixes issue where log files would be closed on pause of the RC or DS, but not re-opened upon resume.\n * Fixes issue with battery handler (voltage) start/stop race.\n * Fixes issue where Android Studio generated op modes would disappear from available list in certain situations.\n * Fixes problem where OnBot Java would not build on REV Robotics Control Hub.\n * Fixes problem where OnBot Java would not build if the date and time on the Robot Controller device was \"rewound\" (set to an earlier date/time).\n * Improved error message on OnBot Java that occurs when renaming a file fails.\n * Removed unneeded resources from android.jar binaries used by OnBot Java to reduce final size of Robot Controller app.\n * Added MR_ANALOG_TOUCH_SENSOR block to Blocks Programming Tool.\n\n## Version 3.4 (built on 17.09.06)\n\nChanges with version 3.4 include:\n * Added telemetry.update() statement for BlankLinearOpMode template.\n * Renamed sample Block op modes to be more consistent with Java samples.\n * Added some additional sample Block op modes.\n * Reworded OnBot Java readme slightly.\n\n## Version 3.3 (built on 17.09.04)\n\nThis version of the software includes improves for the FTC Blocks Programming Tool and the OnBot Java Programming Tool.\n\nChanges with verion 3.3 include:\n * Android Studio ftc_app project has been updated to use Gradle Plugin 2.3.3.\n * Android Studio ftc_app project is already using gradle 3.5 distribution.\n * Robot Controller log has been renamed to /sdcard/RobotControllerLog.txt (note that this change was actually introduced w/ v3.2).\n * Improvements in I2C reliability.\n * Optimized I2C read for REV Expansion Hub, with v1.7 firmware or greater.\n * Updated all external/samples (available through OnBot and in Android project folder).\n * Vuforia\n    - Added support for VuMarks that will be used for the 2017-2018 season game.\n * Blocks\n    - Update to latest Google Blockly release.\n    - Sample op modes can be selected as a template when creating new op mode.\n    - Fixed bug where the blocks would disappear temporarily when mouse button is held down.\n    - Added blocks for Range.clip and Range.scale.\n    - User can now disable/enable Block op modes.\n    - Fix to prevent occasional Blocks deadlock.\n * OnBot Java\n    - Significant improvements with autocomplete function for OnBot Java editor.\n    - Sample op modes can be selected as a template when creating new op mode.\n    - Fixes and changes to complete hardware setup feature.\n    - Updated (and more useful) onBot welcome message.\n\nKnown issues:\n * Android Studio\n    - After updating to the new v3.3 Android Studio project folder, if you get error messages indicating \"InvalidVirtualFileAccessException\" then you might need to do a File->Invalidate Caches / Restart to clear the error.\n * OnBot Java\n    - Sometimes when you push the build button to build all op modes, the RC returns an error message that the build failed.  If you press the build button a second time, the build typically suceeds.\n\n## Version 3.2 (built on 17.08.02)\n\nThis version of the software introduces the \"OnBot Java\" Development Tool.  Similar to the FTC Blocks Development Tool, the FTC OnBot Java Development Tool allows a user to create, edit and build op modes dynamically using only a Javascript-enabled web browser.\n\nThe OnBot Java Development Tool is an integrated development environment (IDE) that is served up by the Robot Controller.  Op modes are created and edited using a Javascript-enabled browser (Google Chromse is recommended).  Op modes are saved on the Robot Controller Android device directly.\n\nThe OnBot Java Development Tool provides a Java programming environment that does NOT need Android Studio.\n\n\n\nChanges with version 3.2 include:\n * Enhanced web-based development tools\n    - Introduction of OnBot Java Development Tool.\n    - Web-based programming and management features are \"always on\" (user no longer needs to put Robot Controller into programming mode).\n    - Web-based management interface (where user can change Robot Controller name and also easily download Robot Controller log file).\n    - OnBot Java, Blocks and Management features available from web based interface.\n\n* Blocks Programming Development Tool:\n    - Changed \"LynxI2cColorRangeSensor\" block to \"REV Color/range sensor\" block.\n    - Fixed tooltip for ColorSensor.isLightOn block.\n    Added blocks for ColorSensor.getNormalizedColors and LynxI2cColorRangeSensor.getNormalizedColors.\n\n* Added example op modes for digital touch sensor and REV Robotics Color Distance sensor.\n* User selectable color themes.\n* Includes many minor enhancements and fixes (too numerous to list).\n\nKnown issues:\n* Auto complete function is incomplete and does not support the following (for now):\n     - Access via *this* keyword\n     - Access via *super* keyword\n     - Members of the super cloass, not overridden by the class\n     - Any methods provided in the current class\n     - Inner classes\n     - Can't handle casted objects\n     - Any objects coming from an parenthetically enclosed expression\n\n## Version 3.10 (built on 17.05.09)\n\nThis version of the software provides support for the REV Robotics Expansion Hub.  This version also includes improvements in the USB communication layer in an effort to enhance system resiliency.  If you were using a 2.x version of the software previously, updating to version 3.1 requires that you also update your Driver Station software in addition to updating the Robot Controller software.\n\nAlso note that in version 3.10 software, the setMaxSpeed and getMaxSpeed methods are no longer available (not deprecated, they have been removed from the SDK). Also note that the the new 3.x software incorporates motor profiles that a user can select as he/she configures the robot.\n\nChanges include:\n * Blocks changes\n    - Added VuforiaTrackableDefaultListener.getPose and Vuforia.trackPose blocks.\n    - Added optimized blocks support for Vuforia extended tracking.\n    - Added atan2 block to the math category.\n    - Added useCompetitionFieldTargetLocations parameter to Vuforia.initialize block.  If set to false, the target locations are placed at (0,0,0) with target orientation as specified in https://github.com/gearsincorg/FTCVuforiaDemo/blob/master/Robot_Navigation.java tutorial op mode.\n * Incorporates additional improvements to USB comm layer to improve system resiliency (to recover from a greater number of communication disruptions).\n\n**************************************************************************************\n\nAdditional Notes Regarding Version 3.00 (built on 17.04.13)\n\nIn addition to the release changes listed below (see section labeled \"Version 3.00 (built on 17.04.013)\"), version 3.00 has the following important changes:\n\n1. Version 3.00 software uses a new version of the FTC Robocol (robot protocol).  If you upgrade to v3.0 on the Robot Controller and/or Android Studio side, you must also upgrade the Driver Station software to match the new Robocol.\n2. Version 3.00 software removes the setMaxSpeed and getMaxSpeed methods from the DcMotor class.  If you have an op mode that formerly used these methods, you will need to remove the references/calls to these methods.  Instead, v3.0 provides the max speed information through the use of motor profiles that are selected by the user during robot configuration.\n3. Version 3.00 software currently does not have a mechanism to disable extra i2c sensors.  We hope to re-introduce this function with a release in the near future.\n\n**************************************************************************************\n\n## Version 3.00 (built on 17.04.13)\n\n*** Use this version of the software at YOUR OWN RISK!!! ***\n\nThis software is being released as an \"alpha\" version.  Use this version at your own risk!\n\nThis pre-release software contains SIGNIFICANT changes, including changes to the Wi-Fi Direct pairing mechanism, rewrites of the I2C sensor classes, changes to the USB/FTDI layer, and the introduction of support for the REV Robotics Expansion Hub and the REV Robotics color-range-light sensor.  These changes were implemented to improve the reliability and resiliency of the FTC control system.\n\nPlease note, however, that version 3.00 is considered \"alpha\" code.  This code is being released so that the FIRST community will have an opportunity to test the new REV Expansion Hub electronics module when it becomes available in May.  The developers do not recommend using this code for critical applications (i.e., competition use).\n\n*** Use this version of the software at YOUR OWN RISK!!! ***\n\nChanges include:\n * Major rework of sensor-related infrastructure.  Includes rewriting sensor classes to implement synchronous I2C communication.\n * Fix to reset Autonomous timer back to 30 seconds.\n * Implementation of specific motor profiles for approved 12V motors (includes Tetrix, AndyMark, Matrix and REV models).\n * Modest improvements to enhance Wi-Fi P2P pairing.\n * Fixes telemetry log addition race.\n * Publishes all the sources (not just a select few).\n * Includes Block programming improvements\n    - Addition of optimized Vuforia blocks.\n    - Auto scrollbar to projects and sounds pages.\n    - Fixed blocks paste bug.\n    - Blocks execute after while-opModeIsActive loop (to allow for cleanup before exiting op mode).\n    - Added gyro integratedZValue block.\n    - Fixes bug with projects page for Firefox browser.\n    - Added IsSpeaking block to AndroidTextToSpeech.\n * Implements support for the REV Robotics Expansion Hub\n    - Implements support for integral REV IMU (physically installed on I2C bus 0, uses same Bosch BNO055 9 axis absolute orientation sensor as Adafruit 9DOF abs orientation sensor).    - Implements support for REV color/range/light sensor.\n    - Provides support to update Expansion Hub firmware through FTC SDK.\n    - Detects REV firmware version and records in log file.\n    - Includes support for REV Control Hub (note that the REV Control Hub is not yet approved for FTC use).\n    - Implements FTC Blocks programming support for REV Expansion Hub and sensor hardware.\n    - Detects and alerts when I2C device disconnect.\n\n## Version 2.62 (built on 17.01.07)\n  * Added null pointer check before calling modeToByte() in finishModeSwitchIfNecessary method for ModernRoboticsUsbDcMotorController class.\n  * Changes to enhance Modern Robotics USB protocol robustness.\n\n## Version 2.61 (released on 16.12.19)\n  * Blocks Programming mode changes:\n     - Fix to correct issue when an exception was thrown because an OpticalDistanceSensor object appears twice in the hardware map (the second time as a LightSensor).\n\n## Version 2.6 (released on 16.12.16)\n  * Fixes for Gyro class:\n     - Improve (decrease) sensor refresh latency.\n     - fix isCalibrating issues.\n  * Blocks Programming mode changes:\n     - Blocks now ignores a device in the configuration xml if the name is empty. Other devices work in configuration work fine.\n\n## Version 2.5 (internal release on released on 16.12.13)\n  * Blocks Programming mode changes:\n     - Added blocks support for AdafruitBNO055IMU.\n     - Added Download Op Mode button to FtcBocks.html.\n     - Added support for copying blocks in one OpMode and pasting them in an other OpMode. The clipboard content is stored on the phone, so the programming mode server must be running.\n     - Modified Utilities section of the toolbox.\n     - In Programming Mode, display information about the active connections.\n     - Fixed paste location when workspace has been scrolled.\n     - Added blocks support for the android Accelerometer.\n     - Fixed issue where Blocks Upload Op Mode truncated name at first dot.\n     - Added blocks support for Android SoundPool.\n     - Added type safety to blocks for Acceleration.\n     - Added type safety to blocks for AdafruitBNO055IMU.Parameters.\n     - Added type safety to blocks for AnalogInput.\n     - Added type safety to blocks for AngularVelocity.\n     - Added type safety to blocks for Color.\n     - Added type safety to blocks for ColorSensor.\n     - Added type safety to blocks for CompassSensor.\n     - Added type safety to blocks for CRServo.\n     - Added type safety to blocks for DigitalChannel.\n     - Added type safety to blocks for ElapsedTime.\n     - Added type safety to blocks for Gamepad.\n     - Added type safety to blocks for GyroSensor.\n     - Added type safety to blocks for IrSeekerSensor.\n     - Added type safety to blocks for LED.\n     - Added type safety to blocks for LightSensor.\n     - Added type safety to blocks for LinearOpMode.\n     - Added type safety to blocks for MagneticFlux.\n     - Added type safety to blocks for MatrixF.\n     - Added type safety to blocks for MrI2cCompassSensor.\n     - Added type safety to blocks for MrI2cRangeSensor.\n     - Added type safety to blocks for OpticalDistanceSensor.\n     - Added type safety to blocks for Orientation.\n     - Added type safety to blocks for Position.\n     - Added type safety to blocks for Quaternion.\n     - Added type safety to blocks for Servo.\n     - Added type safety to blocks for ServoController.\n     - Added type safety to blocks for Telemetry.\n     - Added type safety to blocks for Temperature.\n     - Added type safety to blocks for TouchSensor.\n     - Added type safety to blocks for UltrasonicSensor.\n     - Added type safety to blocks for VectorF.\n     - Added type safety to blocks for Velocity.\n     - Added type safety to blocks for VoltageSensor.\n     - Added type safety to blocks for VuforiaLocalizer.Parameters.\n     - Added type safety to blocks for VuforiaTrackable.\n     - Added type safety to blocks for VuforiaTrackables.\n     - Added type safety to blocks for enums in AdafruitBNO055IMU.Parameters.\n     - Added type safety to blocks for AndroidAccelerometer, AndroidGyroscope, AndroidOrientation, and AndroidTextToSpeech.\n\n## Version 2.4 (released on 16.11.13)\n  * Fix to avoid crashing for nonexistent resources.\n  * Blocks Programming mode changes:\n     - Added blocks to support OpenGLMatrix, MatrixF, and VectorF.\n     - Added blocks to support AngleUnit, AxesOrder, AxesReference, CameraDirection, CameraMonitorFeedback, DistanceUnit, and TempUnit.\n     - Added blocks to support Acceleration.\n     - Added blocks to support LinearOpMode.getRuntime.\n     - Added blocks to support MagneticFlux and Position.\n     - Fixed typos.\n     - Made blocks for ElapsedTime more consistent with other objects.\n     - Added blocks to support Quaternion, Velocity, Orientation, AngularVelocity.\n     - Added blocks to support VuforiaTrackables, VuforiaTrackable, VuforiaLocalizer, VuforiaTrackableDefaultListener.\n     - Fixed a few blocks.\n     - Added type checking to new blocks.\n     - Updated to latest blockly.\n     - Added default variable blocks to navigation and matrix blocks.\n     - Fixed toolbox entry for openGLMatrix_rotation_withAxesArgs.\n     - When user downloads Blocks-generated op mode, only the .blk file is downloaded.\n     - When user uploads Blocks-generated op mode (.blk file), Javascript code is auto generated.\n     - Added DbgLog support.\n     - Added logging when a blocks file is read/written.\n     - Fixed bug to properly render blocks even if missing devices from configuration file.\n     - Added support for additional characters (not just alphanumeric) for the block file names (for download and upload).\n     - Added support for OpMode flavor (\"Autonomous\" or \"TeleOp\") and group.\n  * Changes to Samples to prevent tutorial issues.\n  * Incorporated suggested changes from public pull 216 ( Replace .. paths ).\n  * Remove Servo Glitches when robot stopped.\n  * if user hits  Cancels  when editing a configuration file, clears the unsaved changes and reverts to original unmodified configuration.\n  * Added log info to help diagnose why the Robot Controller app was terminated (for example, by watch dog function).\n  * Added ability to transfer log from the controller.\n  * Fixed inconsistency for AngularVelocity\n  * Limit unbounded growth of data for telemetry.  If user does not call telemetry.update() for LinearOpMode in a timely manner, data added for telemetry might get lost if size limit is exceeded.\n\n## Version 2.35 (released on 16.10.06)\n  * Blockly programming mode - Removed unnecesary idle() call from blocks for new project.\n\n## Version 2.30 (released on 16.10.05)\n  * Blockly programming mode:\n     - Mechanism added to save Blockly op modes from Programming Mode Server onto local device\n     - To avoid clutter, blocks are displayed in categorized folders\n     - Added support for DigitalChannel\n     - Added support for ModernRoboticsI2cCompassSensor\n     - Added support for ModernRoboticsI2cRangeSensor\n     - Added support for VoltageSensor\n     - Added support for AnalogInput\n     - Added support for AnalogOutput\n     - Fix for CompassSensor setMode block\n  * Vuforia\n     - Fix deadlock / make camera data available while Vuforia is running.\n     - Update to Vuforia 6.0.117 (recommended by Vuforia and Google to close security loophole).\n  * Fix for autonomous 30 second timer bug (where timer was in effect, even though it appeared to have timed out).\n  * opModeIsActive changes to allow cleanup after op mode is stopped (with enforced 2 second safety timeout).\n  * Fix to avoid reading i2c twice.\n  * Updated sample Op Modes.\n  * Improved logging and fixed intermittent freezing.\n  * Added digital I/O sample.\n  * Cleaned up device names in sample op modes to be consistent with Pushbot guide.\n  * Fix to allow use of IrSeekerSensorV3.\n\n## Version 2.20 (released on 16.09.08)\n  * Support for Modern Robotics Compass Sensor.\n  * Support for Modern Robotics Range Sensor.\n  * Revise device names for Pushbot templates to match the names used in Pushbot guide.\n  * Fixed bug so that IrSeekerSensorV3 device is accessible as IrSeekerSensor in hardwareMap.\n  * Modified computer vision code to require an individual Vuforia license (per legal requirement from PTC).\n  * Minor fixes.\n  * Blockly enhancements:\n     - Support for Voltage Sensor.\n     - Support for Analog Input.\n     - Support for Analog Output.\n     - Support for Light Sensor.\n     - Support for Servo Controller.\n\n## Version 2.10 (released on 16.09.03)\n * Support for Adafruit IMU.\n * Improvements to ModernRoboticsI2cGyro class\n    - Block on reset of z axis.\n    - isCalibrating() returns true while gyro is calibration.\n * Updated sample gyro program.\n * Blockly enhancements\n    - support for android.graphics.Color.\n    - added support for ElapsedTime.\n    - improved look and legibility of blocks.\n    - support for compass sensor.\n    - support for ultrasonic sensor.\n    - support for IrSeeker.\n    - support for LED.\n    - support for color sensor.\n    - support for CRServo\n    - prompt user to configure robot before using programming mode.\n * Provides ability to disable audio cues.\n * various bug fixes and improvements.\n\n## Version 2.00 (released on 16.08.19)\n * This is the new release for the upcoming 2016-2017 FIRST Tech Challenge Season.\n * Channel change is enabled in the FTC Robot Controller app for Moto G 2nd and 3rd Gen phones.\n * Users can now use annotations to register/disable their Op Modes.\n * Changes in the Android SDK, JDK and build tool requirements (minsdk=19, java 1.7, build tools 23.0.3).\n * Standardized units in analog input.\n * Cleaned up code for existing analog sensor classes.\n * setChannelMode and getChannelMode were REMOVED from the DcMotorController class.  This is important - we no longer set the motor modes through the motor controller.\n * setMode and getMode were added to the DcMotor class.\n * ContinuousRotationServo class has been added to the FTC SDK.\n * Range.clip() method has been overloaded so it can support this operation for int, short and byte integers.\n * Some changes have been made (new methods added) on how a user can access items from the hardware map.\n * Users can now set the zero power behavior for a DC motor so that the motor will brake or float when power is zero.\n * Prototype Blockly Programming Mode has been added to FTC Robot Controller.  Users can place the Robot Controller into this mode, and then use a device (such as a laptop) that has a Javascript enabled browser to write Blockly-based Op Modes directly onto the Robot Controller.\n * Users can now configure the robot remotely through the FTC Driver Station app.\n * Android Studio project supports Android Studio 2.1.x and compile SDK Version 23 (Marshmallow).\n * Vuforia Computer Vision SDK integrated into FTC SDK.  Users can use sample vision targets to get localization information on a standard FTC field.\n * Project structure has been reorganized so that there is now a TeamCode package that users can use to place their local/custom Op Modes into this package.\n * Inspection function has been integrated into the FTC Robot Controller and Driver Station Apps (Thanks Team HazMat  9277 & 10650!).\n * Audio cues have been incorporated into FTC SDK.\n * Swap mechanism added to FTC Robot Controller configuration activity.  For example, if you have two motor controllers on a robot, and you misidentified them in your configuration file, you can use the Swap button to swap the devices within the configuration file (so you do not have to manually re-enter in the configuration info for the two devices).\n * Fix mechanism added to all user to replace an electronic module easily.  For example, suppose a servo controller dies on your robot. You replace the broken module with a new module, which has a different serial number from the original servo controller.  You can use the Fix button to automatically reconfigure your configuration file to use the serial number of the new module.\n * Improvements made to fix resiliency and responsiveness of the system.\n * For LinearOpMode the user now must for a telemetry.update() to update the telemetry data on the driver station.  This update() mechanism ensures that the driver station gets the updated data properly and at the same time.\n * The Auto Configure function of the Robot Controller is now template based.  If there is a commonly used robot configuration, a template can be created so that the Auto Configure mechanism can be used to quickly configure a robot of this type.\n * The logic to detect a runaway op mode (both in the LinearOpMode and OpMode types) and to abort the run, then auto recover has been improved/implemented.\n * Fix has been incorporated so that Logitech F310 gamepad mappings will be correct for Marshmallow users.\n\n## Release 16.07.08\n\n * For the ftc_app project, the gradle files have been modified to support Android Studio 2.1.x.\n\n## Release 16.03.30\n\n * For the MIT App Inventor, the design blocks have new icons that better represent the function of each design component.\n * Some changes were made to the shutdown logic to ensure the robust shutdown of some of our USB services.\n * A change was made to LinearOpMode so as to allow a given instance to be executed more than once, which is required for the App Inventor.\n * Javadoc improved/updated.\n\n## Release 16.03.09\n\n * Changes made to make the FTC SDK synchronous (significant change!)\n    - waitOneFullHardwareCycle() and waitForNextHardwareCycle() are no longer needed and have been deprecated.\n    - runOpMode() (for a LinearOpMode) is now decoupled from the system's hardware read/write thread.\n    - loop() (for an OpMode) is now decoupled from the system's hardware read/write thread.\n    - Methods are synchronous.\n    - For example, if you call setMode(DcMotorController.RunMode.RESET_ENCODERS) for a motor, the encoder is guaranteed to be reset when the method call is complete.\n    - For legacy module (NXT compatible), user no longer has to toggle between read and write modes when reading from or writing to a legacy device.\n * Changes made to enhance reliability/robustness during ESD event.\n * Changes made to make code thread safe.\n * Debug keystore added so that user-generated robot controller APKs will all use the same signed key (to avoid conflicts if a team has multiple developer laptops for example).\n * Firmware version information for Modern Robotics modules are now logged.\n * Changes made to improve USB comm reliability and robustness.\n * Added support for voltage indicator for legacy (NXT-compatible) motor controllers.\n * Changes made to provide auto stop capabilities for op modes.\n    - A LinearOpMode class will stop when the statements in runOpMode() are complete.  User does not have to push the stop button on the driver station.\n    - If an op mode is stopped by the driver station, but there is a run away/uninterruptible thread persisting, the app will log an error message then force itself to crash to stop the runaway thread.\n * Driver Station UI modified to display lowest measured voltage below current voltage (12V battery).\n * Driver Station UI modified to have color background for current voltage (green=good, yellow=caution, red=danger, extremely low voltage).\n * javadoc improved (edits and additional classes).\n * Added app build time to About activity for driver station and robot controller apps.\n * Display local IP addresses on Driver Station About activity.\n * Added I2cDeviceSynchImpl.\n * Added I2cDeviceSync interface.\n * Added seconds() and milliseconds() to ElapsedTime for clarity.\n * Added getCallbackCount() to I2cDevice.\n * Added missing clearI2cPortActionFlag.\n * Added code to create log messages while waiting for LinearOpMode shutdown.\n * Fix so Wifi Direct Config activity will no longer launch multiple times.\n * Added the ability to specify an alternate i2c address in software for the Modern Robotics gyro.\n\n## Release 16.02.09\n\n * Improved battery checker feature so that voltage values get refreshed regularly (every 250 msec) on Driver Station (DS) user interface.\n * Improved software so that Robot Controller (RC) is much more resilient and  self-healing  to USB disconnects:\n    - If user attempts to start/restart RC with one or more module missing, it will display a warning but still start up.\n    - When running an op mode, if one or more modules gets disconnected, the RC & DS will display warnings,and robot will keep on working in spite of the missing module(s).\n    - If a disconnected module gets physically reconnected the RC will auto detect the module and the user will regain control of the recently connected module.\n    - Warning messages are more helpful (identifies the type of module that s missing plus its USB serial number).\n * Code changes to fix the null gamepad reference when users try to reference the gamepads in the init() portion of their op mode.\n * NXT light sensor output is now properly scaled.  Note that teams might have to readjust their light threshold values in their op modes.\n * On DS user interface, gamepad icon for a driver will disappear if the matching gamepad is disconnected or if that gamepad gets designated as a different driver.\n * Robot Protocol (ROBOCOL) version number info is displayed in About screen on RC and DS apps.\n * Incorporated a display filter on pairing screen to filter out devices that don t use the  <TEAM NUMBER>-  format. This filter can be turned off to show all WiFi Direct devices.\n * Updated text in License file.\n * Fixed formatting error in OpticalDistanceSensor.toString().\n * Fixed issue on with a blank (  ) device name that would disrupt WiFi Direct Pairing.\n * Made a change so that the WiFi info and battery info can be displayed more quickly on the DS upon connecting to RC.\n * Improved javadoc generation.\n * Modified code to make it easier to support language localization in the future.\n\n## Release 16.01.04\n\n * Updated compileSdkVersion for apps\n * Prevent Wifi from entering power saving mode\n * removed unused import from driver station\n * Corrrected \"Dead zone\" joystick code.\n * LED.getDeviceName and .getConnectionInfo() return null\n * apps check for ROBOCOL_VERSION mismatch\n * Fix for Telemetry also has off-by-one errors in its data string sizing / short size limitations error\n * User telemetry output is sorted.\n * added formatting variants to DbgLog and RobotLog APIs\n * code modified to allow for a long list of op mode names.\n * changes to improve thread safety of RobocolDatagramSocket\n * Fix for \"missing hardware leaves robot controller disconnected from driver station\" error\n * fix for \"fast tapping of Init/Start causes problems\" (toast is now only instantiated on UI thread).\n * added some log statements for thread life cycle.\n * moved gamepad reset logic inside of initActiveOpMode() for robustness\n * changes made to mitigate risk of race conditions on public methods.\n * changes to try and flag when WiFi Direct name contains non-printable characters.\n * fix to correct race condition between .run() and .close() in ReadWriteRunnableStandard.\n * updated FTDI driver\n * made ReadWriteRunnableStanard interface public.\n * fixed off-by-one errors in Command constructor\n * moved specific hardware implmentations into their own package.\n * moved specific gamepad implemnatations to the hardware library.\n * changed LICENSE file to new BSD version.\n * fixed race condition when shutting down Modern Robotics USB devices.\n * methods in the ColorSensor classes have been synchronized.\n * corrected isBusy() status to reflect end of motion.\n * corrected \"back\" button keycode.\n * the notSupported() method of the GyroSensor class was changed to protected (it should not be public).\n\n## Release 15.11.04.001\n\n * Added Support for Modern Robotics Gyro.\n  - The GyroSensor class now supports the MR Gyro Sensor.\n  - Users can access heading data (about Z axis)\n  - Users can also access raw gyro data (X, Y, & Z axes).\n  - Example MRGyroTest.java op mode included.\n * Improved error messages\n  - More descriptive error messages for exceptions in user code.\n * Updated DcMotor API\n * Enable read mode on new address in setI2cAddress\n * Fix so that driver station app resets the gamepads when switching op modes.\n * USB-related code changes to make USB comm more responsive and to display more explicit error messages.\n  - Fix so that USB will recover properly if the USB bus returns garbage data.\n  - Fix USB initializtion race condition.\n  - Better error reporting during FTDI open.\n  - More explicit messages during USB failures.\n  - Fixed bug so that USB device is closed if event loop teardown method was not called.\n * Fixed timer UI issue\n * Fixed duplicate name UI bug (Legacy Module configuration).\n * Fixed race condition in EventLoopManager.\n * Fix to keep references stable when updating gamepad.\n * For legacy Matrix motor/servo controllers removed necessity of appending \"Motor\" and \"Servo\" to controller names.\n * Updated HT color sensor driver to use constants from ModernRoboticsUsbLegacyModule class.\n * Updated MR color sensor driver to use constants from ModernRoboticsUsbDeviceInterfaceModule class.\n * Correctly handle I2C Address change in all color sensors\n * Updated/cleaned up op modes.\n  - Updated comments in LinearI2cAddressChange.java example op mode.\n  - Replaced the calls to \"setChannelMode\" with \"setMode\" (to match the new of the DcMotor  method).\n  - Removed K9AutoTime.java op mode.\n  - Added MRGyroTest.java op mode (demonstrates how to use MR Gyro Sensor).\n  - Added MRRGBExample.java op mode (demonstrates how to use MR Color Sensor).\n  - Added HTRGBExample.java op mode (demonstrates how to use HT legacy color sensor).\n  - Added MatrixControllerDemo.java (demonstrates how to use legacy Matrix controller).\n * Updated javadoc documentation.\n * Updated release .apk files for Robot Controller and Driver Station apps.\n\n## Release 15.10.06.002\n\n * Added support for Legacy Matrix 9.6V motor/servo controller.\n * Cleaned up build.gradle file.\n * Minor UI and bug fixes for driver station and robot controller apps.\n * Throws error if Ultrasonic sensor (NXT) is not configured for legacy module port 4 or 5.\n\n\n## Release 15.08.03.001\n\n * New user interfaces for FTC Driver Station and FTC Robot Controller apps.\n * An init() method is added to the OpMode class.\n   - For this release, init() is triggered right before the start() method.\n   - Eventually, the init() method will be triggered when the user presses an \"INIT\" button on driver station.\n   - The init() and loop() methods are now required (i.e., need to be overridden in the user's op mode).\n   - The start() and stop() methods are optional.\n * A new LinearOpMode class is introduced.\n   - Teams can use the LinearOpMode mode to create a linear (not event driven) program model.\n   - Teams can use blocking statements like Thread.sleep() within a linear op mode.\n * The API for the Legacy Module and Core Device Interface Module have been updated.\n   - Support for encoders with the Legacy Module is now working.\n * The hardware loop has been updated for better performance.",
      "sha256":"b16b1aef6ee5c93cae1da455735ad6f4220bf2ff0417c0427216e85ab5977251",
      "url":"https://github.com/FIRST-Tech-Challenge/FtcRobotController/releases/download/v6.0/FtcRobotController-release.apk",
      "versionCode":38,
      "versionString":"6.0"
    }, {
      "expectedFileSizeMiB": 365,
      "permanentSoftwareName": "control-hub-os",
      "releaseDate": "2020-12-16T22:56:27.773Z",
      "releaseNotes": "## Version 1.1.1\n\n* Fixed bug where Wifi access point would sometimes fail to start after an Operating System update\n* Stopped the FtcAccessPointService UI auto-starting on boot\n* Allowed WiFi beacon rate to be changed by the FTC Robot Controller app\n\n## Version 1.1.0 Changes\n\n* Improved reliability of making changes to WiFi access point settings\n* Updated to latest Realtek WiFi driver\n* Increased WiFi beacon rate to 6mbps, which reduces congestion when many Control Hubs are being used in an area\n* Enabled 802.11w, which prevents WiFi deauthentication attacks when the Control Hub is used with a client device that also supports 802.11w\n* Added WifiLog.txt file for debugging and disconnection analysis\n* Improved reliability of FtcAccessPointService UI (accessed through an HDMI monitor)\n* Added 5 GHz channels to FtcAccessPointService UI\n* Ensured app data is not lost when installing a Robot Controller with a different signature via the Manage webpage\n* Fixed issue where WiFi SSID would sometimes be AndroidAP",
      "sha256": "86f7f7d9efbe439bc5aa2a6661b7333e98e3bd9accdeb83fecfe961c45da75c9",
      "url": "https://www.revrobotics.com/content/sw/chv1/ControlHubOS-1.1.1.zip",
      "versionCode": 5,
      "versionString": "1.1.1"
    }, {
      "expectedFileSizeMiB":0.064,
      "permanentSoftwareName":"hub-firmware",
      "releaseDate":"2018-07-15T9:25:43.511Z",
      "releaseNotes":"## Version 1.7.2\n* Fixes a bug where encoder counts would occasionally reset.",
      "sha256":"4201298698683f8af3a9c695ef5bc46af675f80a4fdb6c62010a8eed11374a69",
      "url":"https://www.revrobotics.com/content/sw/REVHubFirmware_1_07_02.bin",
      "versionCode":3,
      "versionString":"1.7.2"
    }, {
      "expectedFileSizeMiB":0.064,
      "permanentSoftwareName":"hub-firmware",
      "releaseDate":"2018-07-15T9:25:43.511Z",
      "releaseNotes":"## Version 1.7.0\n* Fixes a bug where some I2C sensors can lock up the bus causing other additional performance issues.\n* Added new status LED blink code:\n\t* Blinking orange indicates the Hub is only powered over USB. In other words, turn on your main power switch!\n* Other minor performance tweaks.",
      "url":"https://www.revrobotics.com/content/sw/REVHubFirmware_1_07_00.bin",
      "sha256":"68aa1b0e5ba42a369b95d25e608ab579e908fa0d9e4edf37e6b1109b8294072c",
      "versionCode":2,
      "versionString":"1.7.0"
    }, {
      "expectedFileSizeMiB":0.064,
      "permanentSoftwareName":"hub-firmware",
      "releaseDate":"2018-07-15T9:25:43.511Z",
      "releaseNotes":"## Version 1.6.0\n* Original Release",
      "sha256":"dbd39a414c6b0dd4d83fd1df9eda110e04f7604dee55ccf36894054a3cfb56ea",
      "url":"https://www.revrobotics.com/content/sw/REVHubFirmware_1_06_00.bin",
      "versionCode":1,
      "versionString":"1.6.0"
    }
  ]
}
